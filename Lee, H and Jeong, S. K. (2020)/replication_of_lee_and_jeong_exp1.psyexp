<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.1.2">
  <Settings>
    <Param val="4" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="pygame" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="norm" valType="str" updates="None" name="Units"/>
    <Param val="2023.1.0" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="replication_of_lee_and_jeong_exp1" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="Yonerge">
      <KeyboardComponent name="Yonergee" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Yonergee" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="TextYonerge" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="TextYonerge" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Welcome to our study.&amp;#10;&amp;#10;You will soon be presented with some colors in a tile on your screen. You are expected to remember the colors with their positions and perform the flanker task. &amp;#10;&amp;#10;While you are trying to remember the color and position information, two letters (H and S) in different positions will be presented on your screen as part of the flanker task. In this task, you are expected to pay attention to which letter is closer to the center, press the relevant key on the keyboard as fast as you can and reject the other letter.&amp;#10;&amp;#10;After the Flanker task, you will once again be presented with some colors in a tile on your screen. You are expected to press the &quot;z&quot; key if the current screen matches the first one exactly in color and position, or the &quot;x&quot; key if it does not, as fast as you can.&amp;#10;&amp;#10;The first 16 trials are practice and after the 16th trial the main trial will begin.&amp;#10;&amp;#10;Click on any key to move to the practice phase." valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Condition1_LowLoadNarrowZoom_2"/>
    <Routine name="WM_Load_alistirma"/>
    <Routine name="fixation_500ms_alistirma"/>
    <Routine name="AlistirmaFlankerTrue">
      <PolygonComponent name="AlistirmaFixation500ms" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="gray" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="AlistirmaFixation500ms" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.03, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="AlistirmaVWMFalseFeedback">
      <ImageComponent name="A_Image_F" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r,g,b]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_Image_F" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.06, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <SoundComponent name="A_Sound_FF" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="A_Sound_FF" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
    </Routine>
    <Routine name="AlistirmaFlankerTrueFeedback">
      <ImageComponent name="A_Flanker_T" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_Flanker_T" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.01, 2.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="AlistirmaFlankerFalseFeedback">
      <ImageComponent name="A_Flanker_F" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_Flanker_F" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.01, 2.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <SoundComponent name="A_Sound_F" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="A_Sound_F" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
    </Routine>
    <Routine name="LNVWMLoad">
      <ImageComponent name="LN_ColorLow" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r,g,b]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="LN_ColorLow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.06, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="LNBlankScreen">
      <ImageComponent name="LN_Blank" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="LN_Blank" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="LNFlankerTask">
      <TextComponent name="LN_TextHedef" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="LN_TextHedef" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonhedef" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$hedef" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="LN_TextCeldirici" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.095" valType="num" updates="constant" name="letterHeight"/>
        <Param val="LN_TextCeldirici" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonceldirici" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$celdirici" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="LN_ResponseKey" plugin="None">
        <Param val="'h','s'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$flankercevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="LN_ResponseKey" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="LN_FlankerCode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((LN_ResponseKey.corr === 1)) {&amp;#10;    YanitY = 0;&amp;#10;    YanitD = 1;&amp;#10;} else {&amp;#10;    YanitY = 1;&amp;#10;    YanitD = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if LN_ResponseKey.corr == 1:&amp;#10;    YanitY = 0&amp;#10;    YanitD = 1&amp;#10;else:&amp;#10;    YanitY = 1&amp;#10;    YanitD = 0" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="LN_FlankerCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="LNFlankerFalseFeedback">
      <ImageComponent name="LN_Flanker_F" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="LN_Flanker_F" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.01, 2.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <SoundComponent name="LN_Sound_F" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="LN_Sound_F" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
    </Routine>
    <Routine name="LNFlankerTrueFeedback">
      <ImageComponent name="LN_Flanker_T" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="LN_Flanker_T" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.01, 2.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="LNVWMTask">
      <ImageComponent name="LN_Image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r,g,b]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="LN_Image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.06, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="LN_TextYanit" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="LN_TextYanit" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$taskcevap" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="LN_KeyTask" plugin="None">
        <Param val="'d','y'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$taskcevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="LN_KeyTask" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="LN_CodeTask" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((LN_TextYanit.text === &quot;y&quot;)) {&amp;#10;    r = (- r);&amp;#10;    g = (- g);&amp;#10;    b = (- b);&amp;#10;    LN_Image.setColor([r, g, b]);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if LN_TextYanit.text == &quot;y&quot;:&amp;#10;    r = -r&amp;#10;    g = -g&amp;#10;    b = -b&amp;#10;    LN_Image.setColor((r,g,b))" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((LN_KeyTask.corr === 0)) {&amp;#10;    YanitYTask = 1;&amp;#10;} else {&amp;#10;    YanitYTask = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if LN_KeyTask.corr == 0:&amp;#10;    YanitYTask = 1&amp;#10;else:&amp;#10;    YanitYTask = 0" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="LN_CodeTask" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="LNVWMFalseFeedback">
      <ImageComponent name="LN_Image_F" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r,g,b]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="LN_Image_F" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.06, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <SoundComponent name="LN_Sound_FF" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="LN_Sound_FF" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
    </Routine>
    <Routine name="ConditionLNStart">
      <KeyboardComponent name="KeyboardStart" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="KeyboardStart" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="TextStart" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="TextStart" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click on any button when you are ready to proceed to the experiment phase." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Alistirma_Load200ms">
      <ImageComponent name="image1Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image1Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image2Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image2Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image3Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image3Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image4Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image4Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image5Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image5Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="CodeLoadAlistirma" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="degisken = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="degisken = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((kosulAlistirma.text === &quot;LN&quot;)) {&amp;#10;    image5Alistirma.size = [0.06, 0.1];&amp;#10;} else {&amp;#10;    if ((kosulAlistirma.text === &quot;HW&quot;)) {&amp;#10;        image1Alistirma.size = [0.06, 0.1];&amp;#10;        image2Alistirma.size = [0.06, 0.1];&amp;#10;        image3Alistirma.size = [0.06, 0.1];&amp;#10;        image4Alistirma.size = [0.06, 0.1];&amp;#10;    } else {&amp;#10;        if ((kosulAlistirma.text === &quot;LW&quot;)) {&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                image2Alistirma.color = &quot;white&quot;;&amp;#10;                image3Alistirma.color = &quot;white&quot;;&amp;#10;                image4Alistirma.color = &quot;white&quot;;&amp;#10;                degisken = 1;&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    image1Alistirma.color = &quot;white&quot;;&amp;#10;                    image3Alistirma.color = &quot;white&quot;;&amp;#10;                    image4Alistirma.color = &quot;white&quot;;&amp;#10;                    degisken = 2;&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        image1Alistirma.color = &quot;white&quot;;&amp;#10;                        image2Alistirma.color = &quot;white&quot;;&amp;#10;                        image4Alistirmacolor = &quot;white&quot;;&amp;#10;                        degisken = 3;&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            image1Alistirma.color = &quot;white&quot;;&amp;#10;                            image2Alistirma.color = &quot;white&quot;;&amp;#10;                            image3Alistirma.color = &quot;white&quot;;&amp;#10;                            degisken = 4;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            image1Alistirma.size = [0.06, 0.1];&amp;#10;            image2Alistirma.size = [0.06, 0.1];&amp;#10;            image3Alistirma.size = [0.06, 0.1];&amp;#10;            image4Alistirma.size = [0.06, 0.1];&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if kosulAlistirma.text == &quot;LN&quot;:&amp;#10;    image5Alistirma.size = (0.06, 0.1)&amp;#10;elif kosulAlistirma.text == &quot;HW&quot;:&amp;#10;    image1Alistirma.size = (0.06, 0.1)&amp;#10;    image2Alistirma.size = (0.06, 0.1)&amp;#10;    image3Alistirma.size = (0.06, 0.1)&amp;#10;    image4Alistirma.size = (0.06, 0.1)&amp;#10;elif kosulAlistirma.text == &quot;LW&quot;:&amp;#10;    dizi = [1,2,3,4]&amp;#10;    shuffle(dizi)&amp;#10;    &amp;#10;    if dizi[0] == 1:&amp;#10;        image2Alistirma.color = &quot;white&quot;&amp;#10;        image3Alistirma.color = &quot;white&quot;&amp;#10;        image4Alistirma.color = &quot;white&quot;&amp;#10;        degisken = 1&amp;#10;    elif dizi[0] == 2:&amp;#10;        image1Alistirma.color = &quot;white&quot;&amp;#10;        image3Alistirma.color = &quot;white&quot;&amp;#10;        image4Alistirma.color = &quot;white&quot;&amp;#10;        degisken = 2&amp;#10;    elif dizi[0] == 3:&amp;#10;        image1Alistirma.color = &quot;white&quot;&amp;#10;        image2Alistirma.color = &quot;white&quot;&amp;#10;        image4Alistirmacolor = &quot;white&quot;&amp;#10;        degisken = 3&amp;#10;    elif dizi[0] == 4:&amp;#10;        image1Alistirma.color = &quot;white&quot;&amp;#10;        image2Alistirma.color = &quot;white&quot;&amp;#10;        image3Alistirma.color = &quot;white&quot;&amp;#10;        degisken = 4&amp;#10;        &amp;#10;    image1Alistirma.size = (0.06, 0.1)&amp;#10;    image2Alistirma.size = (0.06, 0.1)&amp;#10;    image3Alistirma.size = (0.06, 0.1)&amp;#10;    image4Alistirma.size = (0.06, 0.1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeLoadAlistirma" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Alistirma_Fixation800ms">
      <ImageComponent name="image800Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image800Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="kosulAlistirma" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="kosulAlistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$condition" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="cevapAlistirma" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cevapAlistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$taskcevap" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Code800Alistirma" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="counter = 0&amp;#10;&amp;#10;r1 = 0&amp;#10;g1 = 0&amp;#10;b1 = 0&amp;#10;r2 = 0&amp;#10;g2 = 0&amp;#10;b2 = 0&amp;#10;r3 = 0&amp;#10;g3 = 0&amp;#10;b3 = 0&amp;#10;r4 = 0&amp;#10;g4 = 0&amp;#10;b4 = 0&amp;#10;r5 = 0&amp;#10;g5 = 0&amp;#10;b5 = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="counter = 0;&amp;#10;r1 = 0;&amp;#10;g1 = 0;&amp;#10;b1 = 0;&amp;#10;r2 = 0;&amp;#10;g2 = 0;&amp;#10;b2 = 0;&amp;#10;r3 = 0;&amp;#10;g3 = 0;&amp;#10;b3 = 0;&amp;#10;r4 = 0;&amp;#10;g4 = 0;&amp;#10;b4 = 0;&amp;#10;r5 = 0;&amp;#10;g5 = 0;&amp;#10;b5 = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="counter = (counter + 1);&amp;#10;r1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="counter = counter + 1&amp;#10;&amp;#10;r1 = float(round(random(),4))&amp;#10;g1 = float(round(random(),4))&amp;#10;b1 = float(round(random(),4))&amp;#10;&amp;#10;r2 = float(round(random(),4))&amp;#10;g2 = float(round(random(),4))&amp;#10;b2 = float(round(random(),4))&amp;#10;&amp;#10;r3 = float(round(random(),4))&amp;#10;g3 = float(round(random(),4))&amp;#10;b3 = float(round(random(),4))&amp;#10;&amp;#10;r4 = float(round(random(),4))&amp;#10;g4 = float(round(random(),4))&amp;#10;b4 = float(round(random(),4))&amp;#10;&amp;#10;r5 = float(round(random(),4))&amp;#10;g5 = float(round(random(),4))&amp;#10;b5 = float(round(random(),4))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Code800Alistirma" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Alistirma_BlankScreen2000ms">
      <ImageComponent name="BlankAlistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="BlankAlistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="CodeBlankAlistirma" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeBlankAlistirma" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Alistirma_FlankerTask2000ms">
      <TextComponent name="HedefAlistirma" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="HedefAlistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonhedef" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$hedef" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="CeldiriciAlistirma" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.095" valType="num" updates="constant" name="letterHeight"/>
        <Param val="CeldiriciAlistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonceldirici" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$celdirici" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="KeyAlistirma" plugin="None">
        <Param val="'h','s'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$flankercevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="KeyAlistirma" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="SoundAlistirma" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="SoundAlistirma" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="CodeFlankerAlistirma" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="FRate = (1000 / Number.parseInt(util.round(psychoJS.window.getActualFrameRate(), 2)));&amp;#10;FrameN = Number.parseInt((2000 / FRate));&amp;#10;frame = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="FRate = 1000 / int(round(win.getActualFrameRate(),2))&amp;#10;FrameN = int(2000 / FRate)&amp;#10;frame = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="frame = frame + 1&amp;#10;requirement = 2000 / FRate&amp;#10;if frame &gt;= requirement:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="frame = (frame + 1);&amp;#10;requirement = (2000 / FRate);&amp;#10;if ((frame &gt;= requirement)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((KeyAlistirma.keys === null)) {&amp;#10;    SoundAlistirma.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if KeyAlistirma.keys == None:&amp;#10;    SoundAlistirma.play()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeFlankerAlistirma" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Alistirma_Fixation500ms">
      <ImageComponent name="FlankerAlistirmaFix" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="FlankerAlistirmaFix" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="CodeFlankerAlistirmaFix" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeFlankerAlistirmaFix" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Alistirma_ChangeDetection">
      <ImageComponent name="image1Alistirma_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image1Alistirma_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image2Alistirma_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image2Alistirma_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image3Alistirma_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image3Alistirma_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image4Alistirma_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image4Alistirma_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image5Alistirma_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image5Alistirma_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="Poli1Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli1Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli2Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli2Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli3Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli3Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli4Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli4Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli5Alistirma" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli5Alistirma" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="KeyAlistirma_2" plugin="None">
        <Param val="'z','x'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$taskcevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="KeyAlistirma_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="SoundAlistirma_2" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="SoundAlistirma_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="CodeTaskAlistirma" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="image1Alistirma_2.size = [0, 0];&amp;#10;image2Alistirma_2.size = [0, 0];&amp;#10;image3Alistirma_2.size = [0, 0];&amp;#10;image4Alistirma_2.size = [0, 0];&amp;#10;image5Alistirma_2.size = [0, 0];&amp;#10;Poli1Alistirma.size = [0, 0];&amp;#10;Poli2Alistirma.size = [0, 0];&amp;#10;Poli3Alistirma.size = [0, 0];&amp;#10;Poli4Alistirma.size = [0, 0];&amp;#10;Poli5Alistirma.size = [0, 0];&amp;#10;if ((kosulAlistirma.text === &quot;LN&quot;)) {&amp;#10;    if ((cevapAlistirma.text === &quot;z&quot;)) {&amp;#10;        image5Alistirma_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;        image5Alistirma_2.size = [0.06, 0.1];&amp;#10;    }&amp;#10;    if ((cevapAlistirma.text === &quot;x&quot;)) {&amp;#10;        r5 = (Number.parseFloat(util.round(r5, 4)) + 0.5333);&amp;#10;        g5 = (Number.parseFloat(util.round(g5, 4)) + 0.5333);&amp;#10;        b5 = (Number.parseFloat(util.round(b5, 4)) + 0.5333);&amp;#10;        if ((r5 &gt; 1)) {&amp;#10;            r5 = (r5 - 0.5333);&amp;#10;            p1 = (1 - r5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            r5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((g5 &gt; 1)) {&amp;#10;            g5 = (g5 - 0.5333);&amp;#10;            p1 = (1 - g5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            g5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((b5 &gt; 1)) {&amp;#10;            b5 = (b5 - 0.5333);&amp;#10;            p1 = (1 - b5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            b5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        image5Alistirma_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;        image5Alistirma_2.size = [0.06, 0.1];&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((kosulAlistirma.text === &quot;HW&quot;)) {&amp;#10;        if ((cevapAlistirma.text === &quot;z&quot;)) {&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                image1Alistirma_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image1Alistirma_2.size = [0.06, 0.1];&amp;#10;                image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image2Alistirma_2.size = [0, 0];&amp;#10;                Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                image3Alistirma_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image3Alistirma_2.size = [0, 0];&amp;#10;                Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image4Alistirma_2.size = [0, 0];&amp;#10;                Poli4Alistirma.size = [0.06, 0.1];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image2Alistirma_2.size = [0.06, 0.1];&amp;#10;                    image1Alistirma_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Alistirma_2.size = [0, 0];&amp;#10;                    Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                    image3Alistirma_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image3Alistirma_2.size = [0, 0];&amp;#10;                    Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                    image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image4Alistirma_2.size = [0, 0];&amp;#10;                    Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        image3Alistirma_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image3Alistirma_2.size = [0.06, 0.1];&amp;#10;                        image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image4Alistirma_2.size = [0, 0];&amp;#10;                        Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                        image1Alistirma_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image1Alistirma_2.size = [0, 0];&amp;#10;                        Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                        image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Alistirma_2.size = [0, 0];&amp;#10;                        Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image4Alistirma_2.size = [0.06, 0.1];&amp;#10;                            image3Alistirma_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Alistirma_2.size = [0, 0];&amp;#10;                            Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                            image1Alistirma_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image1Alistirma_2.size = [0, 0];&amp;#10;                            Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                            image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image2Alistirma_2.size = [0, 0];&amp;#10;                            Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;        if ((cevapAlistirma.text === &quot;x&quot;)) {&amp;#10;            r1 = (Number.parseFloat(util.round(r1, 4)) + 0.5333);&amp;#10;            g1 = (Number.parseFloat(util.round(g1, 4)) + 0.5333);&amp;#10;            b1 = (Number.parseFloat(util.round(b1, 4)) + 0.5333);&amp;#10;            r2 = (Number.parseFloat(util.round(r2, 4)) + 0.5333);&amp;#10;            g2 = (Number.parseFloat(util.round(g2, 4)) + 0.5333);&amp;#10;            b2 = (Number.parseFloat(util.round(b2, 4)) + 0.5333);&amp;#10;            r3 = (Number.parseFloat(util.round(r3, 4)) + 0.5333);&amp;#10;            g3 = (Number.parseFloat(util.round(g3, 4)) + 0.5333);&amp;#10;            b3 = (Number.parseFloat(util.round(b3, 4)) + 0.5333);&amp;#10;            r4 = (Number.parseFloat(util.round(r4, 4)) + 0.5333);&amp;#10;            g4 = (Number.parseFloat(util.round(g4, 4)) + 0.5333);&amp;#10;            b4 = (Number.parseFloat(util.round(b4, 4)) + 0.5333);&amp;#10;            if ((r1 &gt; 1)) {&amp;#10;                r1 = (r1 - 0.5333);&amp;#10;                p1 = (1 - r1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g1 &gt; 1)) {&amp;#10;                g1 = (g1 - 0.5333);&amp;#10;                p1 = (1 - g1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b1 &gt; 1)) {&amp;#10;                b1 = (b1 - 0.5333);&amp;#10;                p1 = (1 - b1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r2 &gt; 1)) {&amp;#10;                r2 = (r2 - 0.5333);&amp;#10;                p1 = (1 - r2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g2 &gt; 1)) {&amp;#10;                g2 = (g2 - 0.5333);&amp;#10;                p1 = (1 - g2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b2 &gt; 1)) {&amp;#10;                b2 = (b2 - 0.5333);&amp;#10;                p1 = (1 - b2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r3 &gt; 1)) {&amp;#10;                r3 = (r3 - 0.5333);&amp;#10;                p1 = (1 - r3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g3 &gt; 1)) {&amp;#10;                g3 = (g3 - 0.5333);&amp;#10;                p1 = (1 - g3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b3 &gt; 1)) {&amp;#10;                b3 = (b3 - 0.5333);&amp;#10;                p1 = (1 - b3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r4 &gt; 1)) {&amp;#10;                r4 = (r4 - 0.5333);&amp;#10;                p1 = (1 - r4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g4 &gt; 1)) {&amp;#10;                g4 = (g4 - 0.5333);&amp;#10;                p1 = (1 - g4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b4 &gt; 1)) {&amp;#10;                b4 = (b4 - 0.5333);&amp;#10;                p1 = (1 - b4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                image1Alistirma_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image1Alistirma_2.size = [0.06, 0.1];&amp;#10;                image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image2Alistirma_2.size = [0, 0];&amp;#10;                Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                image3Alistirma_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image3Alistirma_2.size = [0, 0];&amp;#10;                Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image4Alistirma_2.size = [0, 0];&amp;#10;                Poli4Alistirma.size = [0.06, 0.1];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image2Alistirma_2.size = [0.06, 0.1];&amp;#10;                    image1Alistirma_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Alistirma_2.size = [0, 0];&amp;#10;                    Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                    image3Alistirma_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image3Alistirma_2.size = [0, 0];&amp;#10;                    Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                    image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image4Alistirma_2.size = [0, 0];&amp;#10;                    Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        image3Alistirma_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image3Alistirma_2.size = [0.06, 0.1];&amp;#10;                        image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image4Alistirma_2.size = [0, 0];&amp;#10;                        Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                        image1Alistirma_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image1Alistirma_2.size = [0, 0];&amp;#10;                        Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                        image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Alistirma_2.size = [0, 0];&amp;#10;                        Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            image4Alistirma_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image4Alistirma_2.size = [0.06, 0.1];&amp;#10;                            image3Alistirma_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Alistirma_2.size = [0, 0];&amp;#10;                            Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                            image1Alistirma_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image1Alistirma_2.size = [0, 0];&amp;#10;                            Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                            image2Alistirma_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image2Alistirma_2.size = [0, 0];&amp;#10;                            Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((kosulAlistirma.text === &quot;LW&quot;)) {&amp;#10;            if ((cevapAlistirma.text === &quot;z&quot;)) {&amp;#10;                if ((degisken === 1)) {&amp;#10;                    image1Alistirma_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Alistirma_2.size = [0.06, 0.1];&amp;#10;                    Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                    Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                    Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((degisken === 2)) {&amp;#10;                        image2Alistirma_2.setColor([r2, g2, b2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Alistirma_2.size = [0.06, 0.1];&amp;#10;                        Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                        Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                        Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((degisken === 3)) {&amp;#10;                            image3Alistirma_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Alistirma_2.size = [0.06, 0.1];&amp;#10;                            Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                            Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                            Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                        } else {&amp;#10;                            if ((degisken === 4)) {&amp;#10;                                image4Alistirma_2.setColor([r4, g4, b4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                                image4Alistirma_2.size = [0.06, 0.1];&amp;#10;                                Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                                Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                                Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            if ((cevapAlistirma.text === &quot;x&quot;)) {&amp;#10;                r1 = (Number.parseFloat(util.round(r1, 4)) + 0.5333);&amp;#10;                g1 = (Number.parseFloat(util.round(g1, 4)) + 0.5333);&amp;#10;                b1 = (Number.parseFloat(util.round(b1, 4)) + 0.5333);&amp;#10;                r2 = (Number.parseFloat(util.round(r2, 4)) + 0.5333);&amp;#10;                g2 = (Number.parseFloat(util.round(g2, 4)) + 0.5333);&amp;#10;                b2 = (Number.parseFloat(util.round(b2, 4)) + 0.5333);&amp;#10;                r3 = (Number.parseFloat(util.round(r3, 4)) + 0.5333);&amp;#10;                g3 = (Number.parseFloat(util.round(g3, 4)) + 0.5333);&amp;#10;                b3 = (Number.parseFloat(util.round(b3, 4)) + 0.5333);&amp;#10;                r4 = (Number.parseFloat(util.round(r4, 4)) + 0.5333);&amp;#10;                g4 = (Number.parseFloat(util.round(g4, 4)) + 0.5333);&amp;#10;                b4 = (Number.parseFloat(util.round(b4, 4)) + 0.5333);&amp;#10;                if ((r1 &gt; 1)) {&amp;#10;                    r1 = (r1 - 0.5333);&amp;#10;                    p1 = (1 - r1);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g1 &gt; 1)) {&amp;#10;                    g1 = (g1 - 0.5333);&amp;#10;                    p1 = (1 - g1);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b1 &gt; 1)) {&amp;#10;                    b1 = (b1 - 0.5333);&amp;#10;                    p1 = (1 - b1);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r2 &gt; 1)) {&amp;#10;                    r2 = (r2 - 0.5333);&amp;#10;                    p1 = (1 - r2);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g2 &gt; 1)) {&amp;#10;                    g2 = (g2 - 0.5333);&amp;#10;                    p1 = (1 - g2);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b2 &gt; 1)) {&amp;#10;                    b2 = (b2 - 0.5333);&amp;#10;                    p1 = (1 - b2);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r3 &gt; 1)) {&amp;#10;                    r3 = (r3 - 0.5333);&amp;#10;                    p1 = (1 - r3);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g3 &gt; 1)) {&amp;#10;                    g3 = (g3 - 0.5333);&amp;#10;                    p1 = (1 - g3);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b3 &gt; 1)) {&amp;#10;                    b3 = (b3 - 0.5333);&amp;#10;                    p1 = (1 - b3);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r4 &gt; 1)) {&amp;#10;                    r4 = (r4 - 0.5333);&amp;#10;                    p1 = (1 - r4);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g4 &gt; 1)) {&amp;#10;                    g4 = (g4 - 0.5333);&amp;#10;                    p1 = (1 - g4);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b4 &gt; 1)) {&amp;#10;                    b4 = (b4 - 0.5333);&amp;#10;                    p1 = (1 - b4);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((degisken === 1)) {&amp;#10;                    image1Alistirma_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Alistirma_2.size = [0.06, 0.1];&amp;#10;                    Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                    Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                    Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((degisken === 2)) {&amp;#10;                        image2Alistirma_2.setColor([r2, g2, b2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Alistirma_2.size = [0.06, 0.1];&amp;#10;                        Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                        Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                        Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((degisken === 3)) {&amp;#10;                            image3Alistirma_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Alistirma_2.size = [0.06, 0.1];&amp;#10;                            Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                            Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                            Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                        } else {&amp;#10;                            if ((degisken === 4)) {&amp;#10;                                image4Alistirma_2.setColor([r4, g4, b4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                                image4Alistirma_2.size = [0.06, 0.1];&amp;#10;                                Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                                Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                                Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="image1Alistirma_2.size = (0, 0)&amp;#10;image2Alistirma_2.size = (0, 0)&amp;#10;image3Alistirma_2.size = (0, 0)&amp;#10;image4Alistirma_2.size = (0, 0)&amp;#10;image5Alistirma_2.size = (0, 0)&amp;#10;Poli1Alistirma.size = (0, 0)&amp;#10;Poli2Alistirma.size = (0, 0)&amp;#10;Poli3Alistirma.size = (0, 0)&amp;#10;Poli4Alistirma.size = (0, 0)&amp;#10;Poli5Alistirma.size = (0, 0)&amp;#10;&amp;#10;if kosulAlistirma.text == &quot;LN&quot;:&amp;#10;    if cevapAlistirma.text == &quot;z&quot;:&amp;#10;        image5Alistirma_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;        image5Alistirma_2.size = (0.06, 0.1)&amp;#10;&amp;#10;    if cevapAlistirma.text == &quot;x&quot;:&amp;#10;        r5 = float(round(r5,4)) + 0.5333&amp;#10;        g5 = float(round(g5,4)) + 0.5333&amp;#10;        b5 = float(round(b5,4)) + 0.5333&amp;#10;       &amp;#10;        if r5 &gt; 1:&amp;#10;            r5 = r5 - 0.5333&amp;#10;            p1 = 1 - r5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g5 &gt; 1:&amp;#10;            g5 = g5 - 0.5333&amp;#10;            p1 = 1 - g5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b5 &gt; 1:&amp;#10;            b5 = b5 - 0.5333&amp;#10;            p1 = 1 - b5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b5 = -float(round(p4,4))&amp;#10;            &amp;#10;        image5Alistirma_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;        image5Alistirma_2.size = (0.06, 0.1)&amp;#10;&amp;#10;elif kosulAlistirma.text == &quot;HW&quot;: &amp;#10;    if cevapAlistirma.text == &quot;z&quot;:&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            image1Alistirma_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0.06, 0.1)&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0, 0)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            image3Alistirma_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0, 0)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0, 0)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 2:&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0.06, 0.1)&amp;#10;            image1Alistirma_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0, 0)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            image3Alistirma_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0, 0)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0, 0)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 3:&amp;#10;            image3Alistirma_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0.06, 0.1)&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0, 0)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;            image1Alistirma_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0, 0)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0, 0)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 4:&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0.06, 0.1)&amp;#10;            image3Alistirma_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0, 0)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            image1Alistirma_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0, 0)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0, 0)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;    &amp;#10;    if cevapAlistirma.text == &quot;x&quot;:&amp;#10;        r1 = float(round(r1,4)) + 0.5333&amp;#10;        g1 = float(round(g1,4)) + 0.5333&amp;#10;        b1 = float(round(b1,4)) + 0.5333&amp;#10;        &amp;#10;        r2 = float(round(r2,4)) + 0.5333&amp;#10;        g2 = float(round(g2,4)) + 0.5333&amp;#10;        b2 = float(round(b2,4)) + 0.5333&amp;#10;        &amp;#10;        r3 = float(round(r3,4)) + 0.5333&amp;#10;        g3 = float(round(g3,4)) + 0.5333&amp;#10;        b3 = float(round(b3,4)) + 0.5333&amp;#10;        &amp;#10;        r4 = float(round(r4,4)) + 0.5333&amp;#10;        g4 = float(round(g4,4)) + 0.5333&amp;#10;        b4 = float(round(b4,4)) + 0.5333&amp;#10;        &amp;#10;        if r1 &gt; 1:&amp;#10;            r1 = r1 - 0.5333&amp;#10;            p1 = 1 - r1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g1 &gt; 1:&amp;#10;            g1 = g1 - 0.5333&amp;#10;            p1 = 1 - g1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b1 &gt; 1:&amp;#10;            b1 = b1 - 0.5333&amp;#10;            p1 = 1 - b1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r2 &gt; 1:&amp;#10;            r2 = r2 - 0.5333&amp;#10;            p1 = 1 - r2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g2 &gt; 1:&amp;#10;            g2 = g2 - 0.5333&amp;#10;            p1 = 1 - g2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b2 &gt; 1:&amp;#10;            b2 = b2 - 0.5333&amp;#10;            p1 = 1 - b2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r3 &gt; 1:&amp;#10;            r3 = r3 - 0.5333&amp;#10;            p1 = 1 - r3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g3 &gt; 1:&amp;#10;            g3 = g3 - 0.5333&amp;#10;            p1 = 1 - g3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b3 &gt; 1:&amp;#10;            b3 = b3 - 0.5333&amp;#10;            p1 = 1 - b3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r4 &gt; 1:&amp;#10;            r4 = r4 - 0.5333&amp;#10;            p1 = 1 - r4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g4 &gt; 1:&amp;#10;            g4 = g4 - 0.5333&amp;#10;            p1 = 1 - g4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b4 &gt; 1:&amp;#10;            b4 = b4 - 0.5333&amp;#10;            p1 = 1 - b4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b4 = -float(round(p4,4))&amp;#10;&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            image1Alistirma_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0.06, 0.1)&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0, 0)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            image3Alistirma_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0, 0)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0, 0)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 2:&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0.06, 0.1)&amp;#10;            image1Alistirma_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0, 0)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            image3Alistirma_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0, 0)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0, 0)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 3:&amp;#10;            image3Alistirma_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0.06, 0.1)&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0, 0)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;            image1Alistirma_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0, 0)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0, 0)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 4:&amp;#10;            image4Alistirma_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0.06, 0.1)&amp;#10;            image3Alistirma_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0, 0)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            image1Alistirma_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0, 0)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            image2Alistirma_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0, 0)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;&amp;#10;elif kosulAlistirma.text == &quot;LW&quot;:&amp;#10;    if cevapAlistirma.text == &quot;z&quot;:&amp;#10;        if degisken == 1:&amp;#10;            image1Alistirma_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif degisken == 2:&amp;#10;            image2Alistirma_2.setColor([r2,g2,b2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif degisken == 3:&amp;#10;            image3Alistirma_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif degisken == 4:&amp;#10;            image4Alistirma_2.setColor([r4,g4,b4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;&amp;#10;    if cevapAlistirma.text == &quot;x&quot;:&amp;#10;        r1 = float(round(r1,4)) + 0.5333&amp;#10;        g1 = float(round(g1,4)) + 0.5333&amp;#10;        b1 = float(round(b1,4)) + 0.5333&amp;#10;        &amp;#10;        r2 = float(round(r2,4)) + 0.5333&amp;#10;        g2 = float(round(g2,4)) + 0.5333&amp;#10;        b2 = float(round(b2,4)) + 0.5333&amp;#10;        &amp;#10;        r3 = float(round(r3,4)) + 0.5333&amp;#10;        g3 = float(round(g3,4)) + 0.5333&amp;#10;        b3 = float(round(b3,4)) + 0.5333&amp;#10;        &amp;#10;        r4 = float(round(r4,4)) + 0.5333&amp;#10;        g4 = float(round(g4,4)) + 0.5333&amp;#10;        b4 = float(round(b4,4)) + 0.5333&amp;#10;        &amp;#10;        if r1 &gt; 1:&amp;#10;            r1 = r1 - 0.5333&amp;#10;            p1 = 1 - r1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g1 &gt; 1:&amp;#10;            g1 = g1 - 0.5333&amp;#10;            p1 = 1 - g1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b1 &gt; 1:&amp;#10;            b1 = b1 - 0.5333&amp;#10;            p1 = 1 - b1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r2 &gt; 1:&amp;#10;            r2 = r2 - 0.5333&amp;#10;            p1 = 1 - r2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g2 &gt; 1:&amp;#10;            g2 = g2 - 0.5333&amp;#10;            p1 = 1 - g2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b2 &gt; 1:&amp;#10;            b2 = b2 - 0.5333&amp;#10;            p1 = 1 - b2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r3 &gt; 1:&amp;#10;            r3 = r3 - 0.5333&amp;#10;            p1 = 1 - r3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g3 &gt; 1:&amp;#10;            g3 = g3 - 0.5333&amp;#10;            p1 = 1 - g3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b3 &gt; 1:&amp;#10;            b3 = b3 - 0.5333&amp;#10;            p1 = 1 - b3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r4 &gt; 1:&amp;#10;            r4 = r4 - 0.5333&amp;#10;            p1 = 1 - r4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g4 &gt; 1:&amp;#10;            g4 = g4 - 0.5333&amp;#10;            p1 = 1 - g4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b4 &gt; 1:&amp;#10;            b4 = b4 - 0.5333&amp;#10;            p1 = 1 - b4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b4 = -float(round(p4,4))&amp;#10;            &amp;#10;            &amp;#10;        if degisken == 1:&amp;#10;            image1Alistirma_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif degisken == 2:&amp;#10;            image2Alistirma_2.setColor([r2,g2,b2], colorSpace='rgb')&amp;#10;            image2Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif degisken == 3:&amp;#10;            image3Alistirma_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            Poli4Alistirma.size = (0.06, 0.1)&amp;#10;        elif degisken == 4:&amp;#10;            image4Alistirma_2.setColor([r4,g4,b4], colorSpace='rgb')&amp;#10;            image4Alistirma_2.size = (0.06, 0.1)&amp;#10;            Poli1Alistirma.size = (0.06, 0.1)&amp;#10;            Poli2Alistirma.size = (0.06, 0.1)&amp;#10;            Poli3Alistirma.size = (0.06, 0.1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((KeyAlistirma_2.corr === 0)) {&amp;#10;    SoundAlistirma_2.play();&amp;#10;}&amp;#10;if ((counter === 16)) {&amp;#10;    ConditionAlistirma.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if KeyAlistirma_2.corr == 0:&amp;#10;    SoundAlistirma_2.play()&amp;#10;    &amp;#10;if counter == 16:&amp;#10;    ConditionAlistirma.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeTaskAlistirma" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Deney_Fixation800ms">
      <ImageComponent name="image800Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image800Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="kosulDeney" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="kosulDeney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$condition" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="cevapDeney" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cevapDeney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$taskcevap" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Code800Deney" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="r1 = 0&amp;#10;g1 = 0&amp;#10;b1 = 0&amp;#10;r2 = 0&amp;#10;g2 = 0&amp;#10;b2 = 0&amp;#10;r3 = 0&amp;#10;g3 = 0&amp;#10;b3 = 0&amp;#10;r4 = 0&amp;#10;g4 = 0&amp;#10;b4 = 0&amp;#10;r5 = 0&amp;#10;g5 = 0&amp;#10;b5 = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="r1 = 0;&amp;#10;g1 = 0;&amp;#10;b1 = 0;&amp;#10;r2 = 0;&amp;#10;g2 = 0;&amp;#10;b2 = 0;&amp;#10;r3 = 0;&amp;#10;g3 = 0;&amp;#10;b3 = 0;&amp;#10;r4 = 0;&amp;#10;g4 = 0;&amp;#10;b4 = 0;&amp;#10;r5 = 0;&amp;#10;g5 = 0;&amp;#10;b5 = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="r1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="r1 = float(round(random(),4))&amp;#10;g1 = float(round(random(),4))&amp;#10;b1 = float(round(random(),4))&amp;#10;&amp;#10;r2 = float(round(random(),4))&amp;#10;g2 = float(round(random(),4))&amp;#10;b2 = float(round(random(),4))&amp;#10;&amp;#10;r3 = float(round(random(),4))&amp;#10;g3 = float(round(random(),4))&amp;#10;b3 = float(round(random(),4))&amp;#10;&amp;#10;r4 = float(round(random(),4))&amp;#10;g4 = float(round(random(),4))&amp;#10;b4 = float(round(random(),4))&amp;#10;&amp;#10;r5 = float(round(random(),4))&amp;#10;g5 = float(round(random(),4))&amp;#10;b5 = float(round(random(),4))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Code800Deney" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Deney_Load200ms">
      <ImageComponent name="image1Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image1Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image2Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image2Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image3Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image3Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image4Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image4Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image5Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image5Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="CodeLoadDeney" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="degisken = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="degisken = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((kosulDeney.text === &quot;LN&quot;)) {&amp;#10;    image5Deney.size = [0.06, 0.1];&amp;#10;} else {&amp;#10;    if ((kosulDeney.text === &quot;HW&quot;)) {&amp;#10;        image1Deney.size = [0.06, 0.1];&amp;#10;        image2Deney.size = [0.06, 0.1];&amp;#10;        image3Deney.size = [0.06, 0.1];&amp;#10;        image4Deney.size = [0.06, 0.1];&amp;#10;    } else {&amp;#10;        if ((kosulDeney.text === &quot;LW&quot;)) {&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                image2Deney.color = &quot;white&quot;;&amp;#10;                image3Deney.color = &quot;white&quot;;&amp;#10;                image4Deney.color = &quot;white&quot;;&amp;#10;                degisken = 1;&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    image1Deney.color = &quot;white&quot;;&amp;#10;                    image3Deney.color = &quot;white&quot;;&amp;#10;                    image4Deney.color = &quot;white&quot;;&amp;#10;                    degisken = 2;&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        image1Deney.color = &quot;white&quot;;&amp;#10;                        image2Deney.color = &quot;white&quot;;&amp;#10;                        image4Deneycolor = &quot;white&quot;;&amp;#10;                        degisken = 3;&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            image1Deney.color = &quot;white&quot;;&amp;#10;                            image2Deney.color = &quot;white&quot;;&amp;#10;                            image3Deney.color = &quot;white&quot;;&amp;#10;                            degisken = 4;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            image1Deney.size = [0.06, 0.1];&amp;#10;            image2Deney.size = [0.06, 0.1];&amp;#10;            image3Deney.size = [0.06, 0.1];&amp;#10;            image4Deney.size = [0.06, 0.1];&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if kosulDeney.text == &quot;LN&quot;:&amp;#10;    image5Deney.size = (0.06, 0.1)&amp;#10;elif kosulDeney.text == &quot;HW&quot;:&amp;#10;    image1Deney.size = (0.06, 0.1)&amp;#10;    image2Deney.size = (0.06, 0.1)&amp;#10;    image3Deney.size = (0.06, 0.1)&amp;#10;    image4Deney.size = (0.06, 0.1)&amp;#10;elif kosulDeney.text == &quot;LW&quot;:&amp;#10;    dizi = [1,2,3,4]&amp;#10;    shuffle(dizi)&amp;#10;    &amp;#10;    if dizi[0] == 1:&amp;#10;        image2Deney.color = &quot;white&quot;&amp;#10;        image3Deney.color = &quot;white&quot;&amp;#10;        image4Deney.color = &quot;white&quot;&amp;#10;        degisken = 1&amp;#10;    elif dizi[0] == 2:&amp;#10;        image1Deney.color = &quot;white&quot;&amp;#10;        image3Deney.color = &quot;white&quot;&amp;#10;        image4Deney.color = &quot;white&quot;&amp;#10;        degisken = 2&amp;#10;    elif dizi[0] == 3:&amp;#10;        image1Deney.color = &quot;white&quot;&amp;#10;        image2Deney.color = &quot;white&quot;&amp;#10;        image4Deneycolor = &quot;white&quot;&amp;#10;        degisken = 3&amp;#10;    elif dizi[0] == 4:&amp;#10;        image1Deney.color = &quot;white&quot;&amp;#10;        image2Deney.color = &quot;white&quot;&amp;#10;        image3Deney.color = &quot;white&quot;&amp;#10;        degisken = 4&amp;#10;        &amp;#10;    image1Deney.size = (0.06, 0.1)&amp;#10;    image2Deney.size = (0.06, 0.1)&amp;#10;    image3Deney.size = (0.06, 0.1)&amp;#10;    image4Deney.size = (0.06, 0.1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeLoadDeney" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Deney_BlankScreen2000ms">
      <ImageComponent name="BlankDeney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="BlankDeney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="CodeBlankDeney" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeBlankDeney" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Deney_FlankerTask2000ms">
      <TextComponent name="HedefDeney" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="HedefDeney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonhedef" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$hedef" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="CeldiriciDeney" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.095" valType="num" updates="constant" name="letterHeight"/>
        <Param val="CeldiriciDeney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonceldirici" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$celdirici" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="KeyDeney" plugin="None">
        <Param val="'h','s'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$flankercevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="KeyDeney" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="SoundDeney" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="SoundDeney" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="CodeFlankerDeney" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((KeyDeney.keys === null)) {&amp;#10;    SoundDeney.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if KeyDeney.keys == None:&amp;#10;    SoundDeney.play()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeFlankerDeney" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Deney_Fixation500ms">
      <ImageComponent name="FlankerDeneyFix" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="small circle.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="FlankerDeneyFix" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="CodeFlankerDeneyFix" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeFlankerDeneyFix" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Deney_ChangeDetection">
      <ImageComponent name="image1Deney_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image1Deney_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image2Deney_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image2Deney_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image3Deney_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image3Deney_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image4Deney_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image4Deney_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="image5Deney_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image5Deney_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="Poli1Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli1Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli2Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli2Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli3Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli3Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli4Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli4Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.09,-0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="Poli5Deney" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[0,0,0]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Poli5Deney" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="KeyDeney_2" plugin="None">
        <Param val="'z','x'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$taskcevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="KeyDeney_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="SoundDeney_2" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="SoundDeney_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="CodeTaskDeney" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="image1Deney_2.size = [0, 0];&amp;#10;image2Deney_2.size = [0, 0];&amp;#10;image3Deney_2.size = [0, 0];&amp;#10;image4Deney_2.size = [0, 0];&amp;#10;image5Deney_2.size = [0, 0];&amp;#10;Poli1Deney.size = [0, 0];&amp;#10;Poli2Deney.size = [0, 0];&amp;#10;Poli3Deney.size = [0, 0];&amp;#10;Poli4Deney.size = [0, 0];&amp;#10;Poli5Deney.size = [0, 0];&amp;#10;if ((kosulDeney.text === &quot;LN&quot;)) {&amp;#10;    if ((cevapDeney.text === &quot;z&quot;)) {&amp;#10;        image5Deney_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;        image5Deney_2.size = [0.06, 0.1];&amp;#10;    }&amp;#10;    if ((cevapDeney.text === &quot;x&quot;)) {&amp;#10;        r5 = (Number.parseFloat(util.round(r5, 4)) + 0.5333);&amp;#10;        g5 = (Number.parseFloat(util.round(g5, 4)) + 0.5333);&amp;#10;        b5 = (Number.parseFloat(util.round(b5, 4)) + 0.5333);&amp;#10;        if ((r5 &gt; 1)) {&amp;#10;            r5 = (r5 - 0.5333);&amp;#10;            p1 = (1 - r5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            r5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((g5 &gt; 1)) {&amp;#10;            g5 = (g5 - 0.5333);&amp;#10;            p1 = (1 - g5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            g5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((b5 &gt; 1)) {&amp;#10;            b5 = (b5 - 0.5333);&amp;#10;            p1 = (1 - b5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            b5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        image5Deney_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;        image5Deney_2.size = [0.06, 0.1];&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((kosulDeney.text === &quot;HW&quot;)) {&amp;#10;        if ((cevapDeney.text === &quot;z&quot;)) {&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                image1Deney_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image1Deney_2.size = [0.06, 0.1];&amp;#10;                image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image2Deney_2.size = [0, 0];&amp;#10;                Poli2Deney.size = [0.06, 0.1];&amp;#10;                image3Deney_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image3Deney_2.size = [0, 0];&amp;#10;                Poli3Deney.size = [0.06, 0.1];&amp;#10;                image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image4Deney_2.size = [0, 0];&amp;#10;                Poli4Deney.size = [0.06, 0.1];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image2Deney_2.size = [0.06, 0.1];&amp;#10;                    image1Deney_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Deney_2.size = [0, 0];&amp;#10;                    Poli1Deney.size = [0.06, 0.1];&amp;#10;                    image3Deney_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image3Deney_2.size = [0, 0];&amp;#10;                    Poli3Deney.size = [0.06, 0.1];&amp;#10;                    image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image4Deney_2.size = [0, 0];&amp;#10;                    Poli4Deney.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        image3Deney_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image3Deney_2.size = [0.06, 0.1];&amp;#10;                        image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image4Deney_2.size = [0, 0];&amp;#10;                        Poli4Deney.size = [0.06, 0.1];&amp;#10;                        image1Deney_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image1Deney_2.size = [0, 0];&amp;#10;                        Poli1Deney.size = [0.06, 0.1];&amp;#10;                        image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Deney_2.size = [0, 0];&amp;#10;                        Poli2Deney.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image4Deney_2.size = [0.06, 0.1];&amp;#10;                            image3Deney_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Deney_2.size = [0, 0];&amp;#10;                            Poli3Deney.size = [0.06, 0.1];&amp;#10;                            image1Deney_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image1Deney_2.size = [0, 0];&amp;#10;                            Poli1Deney.size = [0.06, 0.1];&amp;#10;                            image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image2Deney_2.size = [0, 0];&amp;#10;                            Poli2Deney.size = [0.06, 0.1];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;        if ((cevapDeney.text === &quot;x&quot;)) {&amp;#10;            r1 = (Number.parseFloat(util.round(r1, 4)) + 0.5333);&amp;#10;            g1 = (Number.parseFloat(util.round(g1, 4)) + 0.5333);&amp;#10;            b1 = (Number.parseFloat(util.round(b1, 4)) + 0.5333);&amp;#10;            r2 = (Number.parseFloat(util.round(r2, 4)) + 0.5333);&amp;#10;            g2 = (Number.parseFloat(util.round(g2, 4)) + 0.5333);&amp;#10;            b2 = (Number.parseFloat(util.round(b2, 4)) + 0.5333);&amp;#10;            r3 = (Number.parseFloat(util.round(r3, 4)) + 0.5333);&amp;#10;            g3 = (Number.parseFloat(util.round(g3, 4)) + 0.5333);&amp;#10;            b3 = (Number.parseFloat(util.round(b3, 4)) + 0.5333);&amp;#10;            r4 = (Number.parseFloat(util.round(r4, 4)) + 0.5333);&amp;#10;            g4 = (Number.parseFloat(util.round(g4, 4)) + 0.5333);&amp;#10;            b4 = (Number.parseFloat(util.round(b4, 4)) + 0.5333);&amp;#10;            if ((r1 &gt; 1)) {&amp;#10;                r1 = (r1 - 0.5333);&amp;#10;                p1 = (1 - r1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g1 &gt; 1)) {&amp;#10;                g1 = (g1 - 0.5333);&amp;#10;                p1 = (1 - g1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b1 &gt; 1)) {&amp;#10;                b1 = (b1 - 0.5333);&amp;#10;                p1 = (1 - b1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r2 &gt; 1)) {&amp;#10;                r2 = (r2 - 0.5333);&amp;#10;                p1 = (1 - r2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g2 &gt; 1)) {&amp;#10;                g2 = (g2 - 0.5333);&amp;#10;                p1 = (1 - g2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b2 &gt; 1)) {&amp;#10;                b2 = (b2 - 0.5333);&amp;#10;                p1 = (1 - b2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r3 &gt; 1)) {&amp;#10;                r3 = (r3 - 0.5333);&amp;#10;                p1 = (1 - r3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g3 &gt; 1)) {&amp;#10;                g3 = (g3 - 0.5333);&amp;#10;                p1 = (1 - g3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b3 &gt; 1)) {&amp;#10;                b3 = (b3 - 0.5333);&amp;#10;                p1 = (1 - b3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r4 &gt; 1)) {&amp;#10;                r4 = (r4 - 0.5333);&amp;#10;                p1 = (1 - r4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g4 &gt; 1)) {&amp;#10;                g4 = (g4 - 0.5333);&amp;#10;                p1 = (1 - g4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b4 &gt; 1)) {&amp;#10;                b4 = (b4 - 0.5333);&amp;#10;                p1 = (1 - b4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                image1Deney_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image1Deney_2.size = [0.06, 0.1];&amp;#10;                image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image2Deney_2.size = [0, 0];&amp;#10;                Poli2Deney.size = [0.06, 0.1];&amp;#10;                image3Deney_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image3Deney_2.size = [0, 0];&amp;#10;                Poli3Deney.size = [0.06, 0.1];&amp;#10;                image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                image4Deney_2.size = [0, 0];&amp;#10;                Poli4Deney.size = [0.06, 0.1];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image2Deney_2.size = [0.06, 0.1];&amp;#10;                    image1Deney_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Deney_2.size = [0, 0];&amp;#10;                    Poli1Deney.size = [0.06, 0.1];&amp;#10;                    image3Deney_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image3Deney_2.size = [0, 0];&amp;#10;                    Poli3Deney.size = [0.06, 0.1];&amp;#10;                    image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image4Deney_2.size = [0, 0];&amp;#10;                    Poli4Deney.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        image3Deney_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image3Deney_2.size = [0.06, 0.1];&amp;#10;                        image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image4Deney_2.size = [0, 0];&amp;#10;                        Poli4Deney.size = [0.06, 0.1];&amp;#10;                        image1Deney_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image1Deney_2.size = [0, 0];&amp;#10;                        Poli1Deney.size = [0.06, 0.1];&amp;#10;                        image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Deney_2.size = [0, 0];&amp;#10;                        Poli2Deney.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            image4Deney_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image4Deney_2.size = [0.06, 0.1];&amp;#10;                            image3Deney_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Deney_2.size = [0, 0];&amp;#10;                            Poli3Deney.size = [0.06, 0.1];&amp;#10;                            image1Deney_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image1Deney_2.size = [0, 0];&amp;#10;                            Poli1Deney.size = [0.06, 0.1];&amp;#10;                            image2Deney_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image2Deney_2.size = [0, 0];&amp;#10;                            Poli2Deney.size = [0.06, 0.1];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((kosulDeney.text === &quot;LW&quot;)) {&amp;#10;            if ((cevapDeney.text === &quot;z&quot;)) {&amp;#10;                if ((degisken === 1)) {&amp;#10;                    image1Deney_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Deney_2.size = [0.06, 0.1];&amp;#10;                    Poli2Deney.size = [0.06, 0.1];&amp;#10;                    Poli3Deney.size = [0.06, 0.1];&amp;#10;                    Poli4Deney.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((degisken === 2)) {&amp;#10;                        image2Deney_2.setColor([r2, g2, b2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Deney_2.size = [0.06, 0.1];&amp;#10;                        Poli1Deney.size = [0.06, 0.1];&amp;#10;                        Poli3Deney.size = [0.06, 0.1];&amp;#10;                        Poli4Deney.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((degisken === 3)) {&amp;#10;                            image3Deney_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Deney_2.size = [0.06, 0.1];&amp;#10;                            Poli1Deney.size = [0.06, 0.1];&amp;#10;                            Poli2Deney.size = [0.06, 0.1];&amp;#10;                            Poli4Deney.size = [0.06, 0.1];&amp;#10;                        } else {&amp;#10;                            if ((degisken === 4)) {&amp;#10;                                image4Deney_2.setColor([r4, g4, b4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                                image4Deney_2.size = [0.06, 0.1];&amp;#10;                                Poli1Deney.size = [0.06, 0.1];&amp;#10;                                Poli2Deney.size = [0.06, 0.1];&amp;#10;                                Poli3Deney.size = [0.06, 0.1];&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            if ((cevapDeney.text === &quot;x&quot;)) {&amp;#10;                r1 = (Number.parseFloat(util.round(r1, 4)) + 0.5333);&amp;#10;                g1 = (Number.parseFloat(util.round(g1, 4)) + 0.5333);&amp;#10;                b1 = (Number.parseFloat(util.round(b1, 4)) + 0.5333);&amp;#10;                r2 = (Number.parseFloat(util.round(r2, 4)) + 0.5333);&amp;#10;                g2 = (Number.parseFloat(util.round(g2, 4)) + 0.5333);&amp;#10;                b2 = (Number.parseFloat(util.round(b2, 4)) + 0.5333);&amp;#10;                r3 = (Number.parseFloat(util.round(r3, 4)) + 0.5333);&amp;#10;                g3 = (Number.parseFloat(util.round(g3, 4)) + 0.5333);&amp;#10;                b3 = (Number.parseFloat(util.round(b3, 4)) + 0.5333);&amp;#10;                r4 = (Number.parseFloat(util.round(r4, 4)) + 0.5333);&amp;#10;                g4 = (Number.parseFloat(util.round(g4, 4)) + 0.5333);&amp;#10;                b4 = (Number.parseFloat(util.round(b4, 4)) + 0.5333);&amp;#10;                if ((r1 &gt; 1)) {&amp;#10;                    r1 = (r1 - 0.5333);&amp;#10;                    p1 = (1 - r1);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g1 &gt; 1)) {&amp;#10;                    g1 = (g1 - 0.5333);&amp;#10;                    p1 = (1 - g1);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b1 &gt; 1)) {&amp;#10;                    b1 = (b1 - 0.5333);&amp;#10;                    p1 = (1 - b1);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r2 &gt; 1)) {&amp;#10;                    r2 = (r2 - 0.5333);&amp;#10;                    p1 = (1 - r2);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g2 &gt; 1)) {&amp;#10;                    g2 = (g2 - 0.5333);&amp;#10;                    p1 = (1 - g2);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b2 &gt; 1)) {&amp;#10;                    b2 = (b2 - 0.5333);&amp;#10;                    p1 = (1 - b2);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r3 &gt; 1)) {&amp;#10;                    r3 = (r3 - 0.5333);&amp;#10;                    p1 = (1 - r3);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g3 &gt; 1)) {&amp;#10;                    g3 = (g3 - 0.5333);&amp;#10;                    p1 = (1 - g3);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b3 &gt; 1)) {&amp;#10;                    b3 = (b3 - 0.5333);&amp;#10;                    p1 = (1 - b3);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r4 &gt; 1)) {&amp;#10;                    r4 = (r4 - 0.5333);&amp;#10;                    p1 = (1 - r4);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g4 &gt; 1)) {&amp;#10;                    g4 = (g4 - 0.5333);&amp;#10;                    p1 = (1 - g4);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b4 &gt; 1)) {&amp;#10;                    b4 = (b4 - 0.5333);&amp;#10;                    p1 = (1 - b4);&amp;#10;                    p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((degisken === 1)) {&amp;#10;                    image1Alistirma_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    image1Alistirma_2.size = [0.06, 0.1];&amp;#10;                    Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                    Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                    Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                } else {&amp;#10;                    if ((degisken === 2)) {&amp;#10;                        image2Alistirma_2.setColor([r2, g2, b2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        image2Alistirma_2.size = [0.06, 0.1];&amp;#10;                        Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                        Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                        Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                    } else {&amp;#10;                        if ((degisken === 3)) {&amp;#10;                            image3Alistirma_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            image3Alistirma_2.size = [0.06, 0.1];&amp;#10;                            Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                            Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                            Poli4Alistirma.size = [0.06, 0.1];&amp;#10;                        } else {&amp;#10;                            if ((degisken === 4)) {&amp;#10;                                image4Alistirma_2.setColor([r4, g4, b4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                                image4Alistirma_2.size = [0.06, 0.1];&amp;#10;                                Poli1Alistirma.size = [0.06, 0.1];&amp;#10;                                Poli2Alistirma.size = [0.06, 0.1];&amp;#10;                                Poli3Alistirma.size = [0.06, 0.1];&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="image1Deney_2.size = (0, 0)&amp;#10;image2Deney_2.size = (0, 0)&amp;#10;image3Deney_2.size = (0, 0)&amp;#10;image4Deney_2.size = (0, 0)&amp;#10;image5Deney_2.size = (0, 0)&amp;#10;Poli1Deney.size = (0, 0)&amp;#10;Poli2Deney.size = (0, 0)&amp;#10;Poli3Deney.size = (0, 0)&amp;#10;Poli4Deney.size = (0, 0)&amp;#10;Poli5Deney.size = (0, 0)&amp;#10;&amp;#10;if kosulDeney.text == &quot;LN&quot;:&amp;#10;    if cevapDeney.text == &quot;z&quot;:&amp;#10;        image5Deney_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;        image5Deney_2.size = (0.06, 0.1)&amp;#10;&amp;#10;    if cevapDeney.text == &quot;x&quot;:&amp;#10;        r5 = float(round(r5,4)) + 0.5333&amp;#10;        g5 = float(round(g5,4)) + 0.5333&amp;#10;        b5 = float(round(b5,4)) + 0.5333&amp;#10;       &amp;#10;        if r5 &gt; 1:&amp;#10;            r5 = r5 - 0.5333&amp;#10;            p1 = 1 - r5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g5 &gt; 1:&amp;#10;            g5 = g5 - 0.5333&amp;#10;            p1 = 1 - g5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b5 &gt; 1:&amp;#10;            b5 = b5 - 0.5333&amp;#10;            p1 = 1 - b5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b5 = -float(round(p4,4))&amp;#10;            &amp;#10;        image5Deney_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;        image5Deney_2.size = (0.06, 0.1)&amp;#10;&amp;#10;elif kosulDeney.text == &quot;HW&quot;: &amp;#10;    if cevapDeney.text == &quot;z&quot;:&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            image1Deney_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0.06, 0.1)&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0, 0)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            image3Deney_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0, 0)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0, 0)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 2:&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0.06, 0.1)&amp;#10;            image1Deney_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0, 0)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            image3Deney_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0, 0)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0, 0)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 3:&amp;#10;            image3Deney_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0.06, 0.1)&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0, 0)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;            image1Deney_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0, 0)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0, 0)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 4:&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0.06, 0.1)&amp;#10;            image3Deney_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0, 0)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            image1Deney_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0, 0)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0, 0)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;    &amp;#10;    if cevapDeney.text == &quot;x&quot;:&amp;#10;        r1 = float(round(r1,4)) + 0.5333&amp;#10;        g1 = float(round(g1,4)) + 0.5333&amp;#10;        b1 = float(round(b1,4)) + 0.5333&amp;#10;        &amp;#10;        r2 = float(round(r2,4)) + 0.5333&amp;#10;        g2 = float(round(g2,4)) + 0.5333&amp;#10;        b2 = float(round(b2,4)) + 0.5333&amp;#10;        &amp;#10;        r3 = float(round(r3,4)) + 0.5333&amp;#10;        g3 = float(round(g3,4)) + 0.5333&amp;#10;        b3 = float(round(b3,4)) + 0.5333&amp;#10;        &amp;#10;        r4 = float(round(r4,4)) + 0.5333&amp;#10;        g4 = float(round(g4,4)) + 0.5333&amp;#10;        b4 = float(round(b4,4)) + 0.5333&amp;#10;        &amp;#10;        if r1 &gt; 1:&amp;#10;            r1 = r1 - 0.5333&amp;#10;            p1 = 1 - r1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g1 &gt; 1:&amp;#10;            g1 = g1 - 0.5333&amp;#10;            p1 = 1 - g1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b1 &gt; 1:&amp;#10;            b1 = b1 - 0.5333&amp;#10;            p1 = 1 - b1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r2 &gt; 1:&amp;#10;            r2 = r2 - 0.5333&amp;#10;            p1 = 1 - r2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g2 &gt; 1:&amp;#10;            g2 = g2 - 0.5333&amp;#10;            p1 = 1 - g2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b2 &gt; 1:&amp;#10;            b2 = b2 - 0.5333&amp;#10;            p1 = 1 - b2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r3 &gt; 1:&amp;#10;            r3 = r3 - 0.5333&amp;#10;            p1 = 1 - r3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g3 &gt; 1:&amp;#10;            g3 = g3 - 0.5333&amp;#10;            p1 = 1 - g3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b3 &gt; 1:&amp;#10;            b3 = b3 - 0.5333&amp;#10;            p1 = 1 - b3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r4 &gt; 1:&amp;#10;            r4 = r4 - 0.5333&amp;#10;            p1 = 1 - r4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g4 &gt; 1:&amp;#10;            g4 = g4 - 0.5333&amp;#10;            p1 = 1 - g4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b4 &gt; 1:&amp;#10;            b4 = b4 - 0.5333&amp;#10;            p1 = 1 - b4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b4 = -float(round(p4,4))&amp;#10;&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            image1Deney_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0.06, 0.1)&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0, 0)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            image3Deney_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0, 0)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0, 0)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 2:&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0.06, 0.1)&amp;#10;            image1Deney_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0, 0)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            image3Deney_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0, 0)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0, 0)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 3:&amp;#10;            image3Deney_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0.06, 0.1)&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0, 0)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;            image1Deney_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0, 0)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0, 0)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;        elif dizi[0] == 4:&amp;#10;            image4Deney_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0.06, 0.1)&amp;#10;            image3Deney_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0, 0)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            image1Deney_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0, 0)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            image2Deney_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0, 0)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;&amp;#10;elif kosulDeney.text == &quot;LW&quot;:&amp;#10;    if cevapDeney.text == &quot;z&quot;:&amp;#10;        if degisken == 1:&amp;#10;            image1Deney_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0.06, 0.1)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif degisken == 2:&amp;#10;            image2Deney_2.setColor([r2,g2,b2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0.06, 0.1)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif degisken == 3:&amp;#10;            image3Deney_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0.06, 0.1)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif degisken == 4:&amp;#10;            image4Deney_2.setColor([r4,g4,b4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0.06, 0.1)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;&amp;#10;    if cevapDeney.text == &quot;x&quot;:&amp;#10;        r1 = float(round(r1,4)) + 0.5333&amp;#10;        g1 = float(round(g1,4)) + 0.5333&amp;#10;        b1 = float(round(b1,4)) + 0.5333&amp;#10;        &amp;#10;        r2 = float(round(r2,4)) + 0.5333&amp;#10;        g2 = float(round(g2,4)) + 0.5333&amp;#10;        b2 = float(round(b2,4)) + 0.5333&amp;#10;        &amp;#10;        r3 = float(round(r3,4)) + 0.5333&amp;#10;        g3 = float(round(g3,4)) + 0.5333&amp;#10;        b3 = float(round(b3,4)) + 0.5333&amp;#10;        &amp;#10;        r4 = float(round(r4,4)) + 0.5333&amp;#10;        g4 = float(round(g4,4)) + 0.5333&amp;#10;        b4 = float(round(b4,4)) + 0.5333&amp;#10;        &amp;#10;        if r1 &gt; 1:&amp;#10;            r1 = r1 - 0.5333&amp;#10;            p1 = 1 - r1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g1 &gt; 1:&amp;#10;            g1 = g1 - 0.5333&amp;#10;            p1 = 1 - g1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b1 &gt; 1:&amp;#10;            b1 = b1 - 0.5333&amp;#10;            p1 = 1 - b1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r2 &gt; 1:&amp;#10;            r2 = r2 - 0.5333&amp;#10;            p1 = 1 - r2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g2 &gt; 1:&amp;#10;            g2 = g2 - 0.5333&amp;#10;            p1 = 1 - g2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b2 &gt; 1:&amp;#10;            b2 = b2 - 0.5333&amp;#10;            p1 = 1 - b2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r3 &gt; 1:&amp;#10;            r3 = r3 - 0.5333&amp;#10;            p1 = 1 - r3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g3 &gt; 1:&amp;#10;            g3 = g3 - 0.5333&amp;#10;            p1 = 1 - g3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b3 &gt; 1:&amp;#10;            b3 = b3 - 0.5333&amp;#10;            p1 = 1 - b3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r4 &gt; 1:&amp;#10;            r4 = r4 - 0.5333&amp;#10;            p1 = 1 - r4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g4 &gt; 1:&amp;#10;            g4 = g4 - 0.5333&amp;#10;            p1 = 1 - g4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b4 &gt; 1:&amp;#10;            b4 = b4 - 0.5333&amp;#10;            p1 = 1 - b4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b4 = -float(round(p4,4))&amp;#10;            &amp;#10;            &amp;#10;        if degisken == 1:&amp;#10;            image1Deney_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            image1Deney_2.size = (0.06, 0.1)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif degisken == 2:&amp;#10;            image2Deney_2.setColor([r2,g2,b2], colorSpace='rgb')&amp;#10;            image2Deney_2.size = (0.06, 0.1)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            Poli3Deney.size = (0.06, 0.1)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif degisken == 3:&amp;#10;            image3Deney_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            image3Deney_2.size = (0.06, 0.1)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            Poli4Deney.size = (0.06, 0.1)&amp;#10;        elif degisken == 4:&amp;#10;            image4Deney_2.setColor([r4,g4,b4], colorSpace='rgb')&amp;#10;            image4Deney_2.size = (0.06, 0.1)&amp;#10;            Poli1Deney.size = (0.06, 0.1)&amp;#10;            Poli2Deney.size = (0.06, 0.1)&amp;#10;            Poli3Deney.size = (0.06, 0.1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((KeyDeney_2.corr === 0)) {&amp;#10;    SoundDeney_2.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if KeyDeney_2.corr == 0:&amp;#10;    SoundDeney_2.play()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="CodeTaskDeney" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Yonerge"/>
    <LoopInitiator loopType="TrialHandler" name="ConditionAlistirma">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="replication_of_lee_and_jeong_exp1.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="ConditionAlistirma" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Alistirma_Fixation800ms"/>
    <Routine name="Alistirma_Load200ms"/>
    <Routine name="Alistirma_BlankScreen2000ms"/>
    <Routine name="Alistirma_FlankerTask2000ms"/>
    <Routine name="Alistirma_Fixation500ms"/>
    <Routine name="Alistirma_ChangeDetection"/>
    <LoopTerminator name="ConditionAlistirma"/>
    <Routine name="ConditionLNStart"/>
    <LoopInitiator loopType="TrialHandler" name="ConditionDeney">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LN'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'HW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'z', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'S', 'celdirici': 'S', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 's', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (0, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, 0.22), 'pozisyonhedef': (-0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}, {'hedef': 'H', 'celdirici': 'H', 'pozisyonceldirici': (0, -0.125), 'pozisyonhedef': (0.03, 0), 'flankercevap': 'h', 'taskcevap': 'x', 'condition': 'LW'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="replication_of_lee_and_jeong_exp1.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="ConditionDeney" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Deney_Fixation800ms"/>
    <Routine name="Deney_Load200ms"/>
    <Routine name="Deney_BlankScreen2000ms"/>
    <Routine name="Deney_FlankerTask2000ms"/>
    <Routine name="Deney_Fixation500ms"/>
    <Routine name="Deney_ChangeDetection"/>
    <LoopTerminator name="ConditionDeney"/>
  </Flow>
</PsychoPy2experiment>
