<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.1.2">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="norm" valType="str" updates="None" name="Units"/>
    <Param val="2023.1.0" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="white" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="replication_of_zhang_and_luck" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="DeneyGecis">
      <KeyboardComponent name="KDYonerge" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="KDYonerge" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="TDYonerge" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="TDYonerge" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click on any button when you are ready to proceed to the experiment phase." valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Yonerge">
      <KeyboardComponent name="KAYonerge" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="KAYonerge" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="TAYonerge" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="TAYonerge" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Welcome to our study.&amp;#10;&amp;#10;Some colored tiles will be presented on your screen soon. You are expected to keep in mind the color and location information of the tiles on your screen.&amp;#10;&amp;#10;After that, three letters (X, Z and N) will be presented on your screen and you will be expected to press the key of whichever letter is horizontally aligned, then one of the tiles presented on the first screen will be presented and you will be expected to answer whether the color and location information is correct or not (S if there is a match, C if there is no match).&amp;#10;&amp;#10;The first 16 trials are as practice and the experiment will start after the 16th trial.&amp;#10;&amp;#10;Click on any button when you are ready to proceed to the practice phase.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="bitis">
      <TextComponent name="TextBitis" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.5" valType="num" updates="constant" name="letterHeight"/>
        <Param val="TextBitis" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Çalışma bitmiştir, iyi günler dileriz." valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Fixation800ms">
      <ImageComponent name="A_image800" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image800" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="A_kosul" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="A_kosul" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$condition" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="A_cevap" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="A_cevap" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (frames)" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$taskcevap" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="A_code800" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="counter = 0&amp;#10;&amp;#10;r1 = 0&amp;#10;g1 = 0&amp;#10;b1 = 0&amp;#10;r2 = 0&amp;#10;g2 = 0&amp;#10;b2 = 0&amp;#10;r3 = 0&amp;#10;g3 = 0&amp;#10;b3 = 0&amp;#10;r4 = 0&amp;#10;g4 = 0&amp;#10;b4 = 0&amp;#10;r5 = 0&amp;#10;g5 = 0&amp;#10;b5 = 0&amp;#10;r6 = 0&amp;#10;g6 = 0&amp;#10;b6 = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="counter = 0;&amp;#10;r1 = 0;&amp;#10;g1 = 0;&amp;#10;b1 = 0;&amp;#10;r2 = 0;&amp;#10;g2 = 0;&amp;#10;b2 = 0;&amp;#10;r3 = 0;&amp;#10;g3 = 0;&amp;#10;b3 = 0;&amp;#10;r4 = 0;&amp;#10;g4 = 0;&amp;#10;b4 = 0;&amp;#10;r5 = 0;&amp;#10;g5 = 0;&amp;#10;b5 = 0;&amp;#10;r6 = 0;&amp;#10;g6 = 0;&amp;#10;b6 = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="counter = (counter + 1);&amp;#10;r1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r6 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g6 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b6 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="counter = counter + 1&amp;#10;&amp;#10;r1 = float(round(random(),4))&amp;#10;g1 = float(round(random(),4))&amp;#10;b1 = float(round(random(),4))&amp;#10;&amp;#10;r2 = float(round(random(),4))&amp;#10;g2 = float(round(random(),4))&amp;#10;b2 = float(round(random(),4))&amp;#10;&amp;#10;r3 = float(round(random(),4))&amp;#10;g3 = float(round(random(),4))&amp;#10;b3 = float(round(random(),4))&amp;#10;&amp;#10;r4 = float(round(random(),4))&amp;#10;g4 = float(round(random(),4))&amp;#10;b4 = float(round(random(),4))&amp;#10;&amp;#10;r5 = float(round(random(),4))&amp;#10;g5 = float(round(random(),4))&amp;#10;b5 = float(round(random(),4))&amp;#10;&amp;#10;r6 = float(round(random(),4))&amp;#10;g6 = float(round(random(),4))&amp;#10;b6 = float(round(random(),4))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="A_code800" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="VWMLoad200ms">
      <ImageComponent name="A_Background1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_Background1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, 2.0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r6,g6,b6]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="A_code200" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((A_kosul.text === &quot;LL&quot;)) {&amp;#10;    A_image5.size = [0.053, 0.093];&amp;#10;    A_image6.size = [0.053, 0.093];&amp;#10;} else {&amp;#10;    if ((A_kosul.text === &quot;HL&quot;)) {&amp;#10;        A_image1.size = [0.053, 0.093];&amp;#10;        A_image2.size = [0.053, 0.093];&amp;#10;        A_image3.size = [0.053, 0.093];&amp;#10;        A_image4.size = [0.053, 0.093];&amp;#10;    } else {&amp;#10;        if ((A_kosul.text === &quot;LS&quot;)) {&amp;#10;            A_image5.size = [0.053, 0.093];&amp;#10;            A_image6.size = [0.053, 0.093];&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if A_kosul.text == &quot;LL&quot;:&amp;#10;    A_image5.size = (0.053, 0.093)&amp;#10;    A_image6.size = (0.053, 0.093)&amp;#10;elif A_kosul.text == &quot;HL&quot;: &amp;#10;    A_image1.size = (0.053, 0.093)&amp;#10;    A_image2.size = (0.053, 0.093)&amp;#10;    A_image3.size = (0.053, 0.093)&amp;#10;    A_image4.size = (0.053, 0.093)&amp;#10;elif A_kosul.text == &quot;LS&quot;: &amp;#10;    A_image5.size = (0.053, 0.093)&amp;#10;    A_image6.size = (0.053, 0.093)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="A_code200" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="BlankScreen2000ms">
      <ImageComponent name="A_image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="A_code2000" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="A_code2000" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Flanker2000ms">
      <ImageComponent name="A_Background2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_Background2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, 2.0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="A_Hedef" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.130" valType="num" updates="constant" name="letterHeight"/>
        <Param val="A_Hedef" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonhedef" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$hedef" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="A_Celdirici" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.186" valType="num" updates="constant" name="letterHeight"/>
        <Param val="A_Celdirici" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonceldirici" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$celdirici" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="A_Key" plugin="None">
        <Param val="'x','z','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$flankercevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="A_Key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="A_Sound" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="A_Sound" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="A_code2000_flanker" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="FRate = (1000 / Number.parseInt(util.round(psychoJS.window.getActualFrameRate(), 2)));&amp;#10;FrameN = Number.parseInt((2000 / FRate));&amp;#10;frame = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="FRate = 1000 / int(round(win.getActualFrameRate(),2))&amp;#10;FrameN = int(2000 / FRate)&amp;#10;frame = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="frame = frame + 1&amp;#10;requirement = 2000 / FRate&amp;#10;if frame &gt;= requirement:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="frame = (frame + 1);&amp;#10;requirement = (2000 / FRate);&amp;#10;if ((frame &gt;= requirement)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((A_Key.keys === null)) {&amp;#10;    A_Sound.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if A_Key.keys == None:&amp;#10;    A_Sound.play()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="A_code2000_flanker" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="FlankerFixation500ms">
      <ImageComponent name="A_500" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_500" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="A_500_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="A_500_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="VWMLoadTask">
      <ImageComponent name="A_Background1_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_Background1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, 2.0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image1_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image2_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image3_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image3_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image4_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image4_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image5_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image5_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="A_image6_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r6,g6,b6]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="A_image6_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="A_Poli1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="A_Poli1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="A_Poli2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="A_Poli2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="A_Poli3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="A_Poli3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="A_Poli4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="A_Poli4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="A_Poli5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="A_Poli5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="A_Poli6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="A_Poli6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="A_Key_2" plugin="None">
        <Param val="'ö','ç'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$taskcevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="A_Key_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="A_Sound_2" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="A_Sound_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="A_Code_VWM" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="A_image1_2.size = [0, 0];&amp;#10;A_image2_2.size = [0, 0];&amp;#10;A_image3_2.size = [0, 0];&amp;#10;A_image4_2.size = [0, 0];&amp;#10;A_image5_2.size = [0, 0];&amp;#10;A_image6_2.size = [0, 0];&amp;#10;A_Poli1.size = [0, 0];&amp;#10;A_Poli2.size = [0, 0];&amp;#10;A_Poli3.size = [0, 0];&amp;#10;A_Poli4.size = [0, 0];&amp;#10;A_Poli5.size = [0, 0];&amp;#10;A_Poli6.size = [0, 0];&amp;#10;if ((A_kosul.text === &quot;LL&quot;)) {&amp;#10;    if ((A_cevap.text === &quot;\u00f6&quot;)) {&amp;#10;        dizi = [5, 6];&amp;#10;        util.shuffle(dizi);&amp;#10;        if ((dizi[0] === 5)) {&amp;#10;            A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            A_image5_2.size = [0.053, 0.093];&amp;#10;            A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            A_image6_2.size = [0, 0];&amp;#10;            A_Poli6.size = [0.053, 0.093];&amp;#10;        } else {&amp;#10;            if ((dizi[0] === 6)) {&amp;#10;                A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image6_2.size = [0.053, 0.093];&amp;#10;                A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image5_2.size = [0, 0];&amp;#10;                A_Poli5.size = [0.053, 0.093];&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    if ((A_cevap.text === &quot;\u00e7&quot;)) {&amp;#10;        r5 = (Number.parseFloat(util.round(r5, 4)) + 0.5333);&amp;#10;        g5 = (Number.parseFloat(util.round(g5, 4)) + 0.5333);&amp;#10;        b5 = (Number.parseFloat(util.round(b5, 4)) + 0.5333);&amp;#10;        r6 = (Number.parseFloat(util.round(r6, 4)) + 0.5333);&amp;#10;        g6 = (Number.parseFloat(util.round(g6, 4)) + 0.5333);&amp;#10;        b6 = (Number.parseFloat(util.round(b6, 4)) + 0.5333);&amp;#10;        if ((r5 &gt; 1)) {&amp;#10;            r5 = (r5 - 0.5333);&amp;#10;            p1 = (1 - r5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            r5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((g5 &gt; 1)) {&amp;#10;            g5 = (g5 - 0.5333);&amp;#10;            p1 = (1 - g5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            g5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((b5 &gt; 1)) {&amp;#10;            b5 = (b5 - 0.5333);&amp;#10;            p1 = (1 - b5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            b5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((r6 &gt; 1)) {&amp;#10;            r6 = (r6 - 0.5333);&amp;#10;            p1 = (1 - r6);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            r6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((g6 &gt; 1)) {&amp;#10;            g6 = (g6 - 0.5333);&amp;#10;            p1 = (1 - g6);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            g6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((b6 &gt; 1)) {&amp;#10;            b6 = (b6 - 0.5333);&amp;#10;            p1 = (1 - b6);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            b6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        dizi = [5, 6];&amp;#10;        util.shuffle(dizi);&amp;#10;        if ((dizi[0] === 5)) {&amp;#10;            A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            A_image5_2.size = [0.053, 0.093];&amp;#10;            A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            A_image6_2.size = [0, 0];&amp;#10;            A_Poli6.size = [0.053, 0.093];&amp;#10;        } else {&amp;#10;            if ((dizi[0] === 6)) {&amp;#10;                A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image6_2.size = [0.053, 0.093];&amp;#10;                A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image5_2.size = [0, 0];&amp;#10;                A_Poli5.size = [0.053, 0.093];&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((A_kosul.text === &quot;HL&quot;)) {&amp;#10;        if ((A_cevap.text === &quot;\u00f6&quot;)) {&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                A_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image1_2.size = [0.053, 0.093];&amp;#10;                A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image2_2.size = [0, 0];&amp;#10;                A_Poli2.size = [0.053, 0.093];&amp;#10;                A_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image3_2.size = [0, 0];&amp;#10;                A_Poli3.size = [0.053, 0.093];&amp;#10;                A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image4_2.size = [0, 0];&amp;#10;                A_Poli4.size = [0.053, 0.093];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image2_2.size = [0.053, 0.093];&amp;#10;                    A_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image1_2.size = [0, 0];&amp;#10;                    A_Poli1.size = [0.053, 0.093];&amp;#10;                    A_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image3_2.size = [0, 0];&amp;#10;                    A_Poli3.size = [0.053, 0.093];&amp;#10;                    A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image4_2.size = [0, 0];&amp;#10;                    A_Poli4.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        A_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image3_2.size = [0.053, 0.093];&amp;#10;                        A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image4_2.size = [0, 0];&amp;#10;                        A_Poli4.size = [0.053, 0.093];&amp;#10;                        A_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image1_2.size = [0, 0];&amp;#10;                        A_Poli1.size = [0.053, 0.093];&amp;#10;                        A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image2_2.size = [0, 0];&amp;#10;                        A_Poli2.size = [0.053, 0.093];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image4_2.size = [0.053, 0.093];&amp;#10;                            A_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image3_2.size = [0, 0];&amp;#10;                            A_Poli3.size = [0.053, 0.093];&amp;#10;                            A_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image1_2.size = [0, 0];&amp;#10;                            A_Poli1.size = [0.053, 0.093];&amp;#10;                            A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image2_2.size = [0, 0];&amp;#10;                            A_Poli2.size = [0.053, 0.093];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;        if ((A_cevap.text === &quot;\u00e7&quot;)) {&amp;#10;            r1 = (Number.parseFloat(util.round(r1, 4)) + 0.5333);&amp;#10;            g1 = (Number.parseFloat(util.round(g1, 4)) + 0.5333);&amp;#10;            b1 = (Number.parseFloat(util.round(b1, 4)) + 0.5333);&amp;#10;            r2 = (Number.parseFloat(util.round(r2, 4)) + 0.5333);&amp;#10;            g2 = (Number.parseFloat(util.round(g2, 4)) + 0.5333);&amp;#10;            b2 = (Number.parseFloat(util.round(b2, 4)) + 0.5333);&amp;#10;            r3 = (Number.parseFloat(util.round(r3, 4)) + 0.5333);&amp;#10;            g3 = (Number.parseFloat(util.round(g3, 4)) + 0.5333);&amp;#10;            b3 = (Number.parseFloat(util.round(b3, 4)) + 0.5333);&amp;#10;            r4 = (Number.parseFloat(util.round(r4, 4)) + 0.5333);&amp;#10;            g4 = (Number.parseFloat(util.round(g4, 4)) + 0.5333);&amp;#10;            b4 = (Number.parseFloat(util.round(b4, 4)) + 0.5333);&amp;#10;            if ((r1 &gt; 1)) {&amp;#10;                r1 = (r1 - 0.5333);&amp;#10;                p1 = (1 - r1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g1 &gt; 1)) {&amp;#10;                g1 = (g1 - 0.5333);&amp;#10;                p1 = (1 - g1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b1 &gt; 1)) {&amp;#10;                b1 = (b1 - 0.5333);&amp;#10;                p1 = (1 - b1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r2 &gt; 1)) {&amp;#10;                r2 = (r2 - 0.5333);&amp;#10;                p1 = (1 - r2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g2 &gt; 1)) {&amp;#10;                g2 = (g2 - 0.5333);&amp;#10;                p1 = (1 - g2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b2 &gt; 1)) {&amp;#10;                b2 = (b2 - 0.5333);&amp;#10;                p1 = (1 - b2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r3 &gt; 1)) {&amp;#10;                r3 = (r3 - 0.5333);&amp;#10;                p1 = (1 - r3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g3 &gt; 1)) {&amp;#10;                g3 = (g3 - 0.5333);&amp;#10;                p1 = (1 - g3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b3 &gt; 1)) {&amp;#10;                b3 = (b3 - 0.5333);&amp;#10;                p1 = (1 - b3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r4 &gt; 1)) {&amp;#10;                r4 = (r4 - 0.5333);&amp;#10;                p1 = (1 - r4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g4 &gt; 1)) {&amp;#10;                g4 = (g4 - 0.5333);&amp;#10;                p1 = (1 - g4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b4 &gt; 1)) {&amp;#10;                b4 = (b4 - 0.5333);&amp;#10;                p1 = (1 - b4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                A_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image1_2.size = [0.053, 0.093];&amp;#10;                A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image2_2.size = [0, 0];&amp;#10;                A_Poli2.size = [0.053, 0.093];&amp;#10;                A_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image3_2.size = [0, 0];&amp;#10;                A_Poli3.size = [0.053, 0.093];&amp;#10;                A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                A_image4_2.size = [0, 0];&amp;#10;                A_Poli4.size = [0.053, 0.093];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image2_2.size = [0.053, 0.093];&amp;#10;                    A_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image1_2.size = [0, 0];&amp;#10;                    A_Poli1.size = [0.053, 0.093];&amp;#10;                    A_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image3_2.size = [0, 0];&amp;#10;                    A_Poli3.size = [0.053, 0.093];&amp;#10;                    A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image4_2.size = [0, 0];&amp;#10;                    A_Poli4.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        A_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image3_2.size = [0.053, 0.093];&amp;#10;                        A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image4_2.size = [0, 0];&amp;#10;                        A_Poli4.size = [0.053, 0.093];&amp;#10;                        A_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image1_2.size = [0, 0];&amp;#10;                        A_Poli1.size = [0.053, 0.093];&amp;#10;                        A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image2_2.size = [0, 0];&amp;#10;                        A_Poli2.size = [0.053, 0.093];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            A_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image4_2.size = [0.053, 0.093];&amp;#10;                            A_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image3_2.size = [0, 0];&amp;#10;                            A_Poli3.size = [0.053, 0.093];&amp;#10;                            A_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image1_2.size = [0, 0];&amp;#10;                            A_Poli1.size = [0.053, 0.093];&amp;#10;                            A_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            A_image2_2.size = [0, 0];&amp;#10;                            A_Poli2.size = [0.053, 0.093];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((A_kosul.text === &quot;LS&quot;)) {&amp;#10;            if ((A_cevap.text === &quot;\u00f6&quot;)) {&amp;#10;                dizi = [5, 6];&amp;#10;                util.shuffle(dizi);&amp;#10;                if ((dizi[0] === 5)) {&amp;#10;                    A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image5_2.size = [0.053, 0.093];&amp;#10;                    A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image6_2.size = [0, 0];&amp;#10;                    A_Poli6.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 6)) {&amp;#10;                        A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image6_2.size = [0.053, 0.093];&amp;#10;                        A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image5_2.size = [0, 0];&amp;#10;                        A_Poli5.size = [0.053, 0.093];&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            if ((A_cevap.text === &quot;\u00e7&quot;)) {&amp;#10;                r5 = (Number.parseFloat(util.round(r5, 4)) + 0.1333);&amp;#10;                g5 = (Number.parseFloat(util.round(g5, 4)) + 0.1333);&amp;#10;                b5 = (Number.parseFloat(util.round(b5, 4)) + 0.1333);&amp;#10;                r6 = (Number.parseFloat(util.round(r6, 4)) + 0.1333);&amp;#10;                g6 = (Number.parseFloat(util.round(g6, 4)) + 0.1333);&amp;#10;                b6 = (Number.parseFloat(util.round(b6, 4)) + 0.1333);&amp;#10;                if ((r5 &gt; 1)) {&amp;#10;                    r5 = (r5 - 0.1333);&amp;#10;                    p1 = (1 - r5);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g5 &gt; 1)) {&amp;#10;                    g5 = (g5 - 0.1333);&amp;#10;                    p1 = (1 - g5);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b5 &gt; 1)) {&amp;#10;                    b5 = (b5 - 0.1333);&amp;#10;                    p1 = (1 - b5);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r6 &gt; 1)) {&amp;#10;                    r6 = (r6 - 0.1333);&amp;#10;                    p1 = (1 - r6);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g6 &gt; 1)) {&amp;#10;                    g6 = (g6 - 0.1333);&amp;#10;                    p1 = (1 - g6);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b6 &gt; 1)) {&amp;#10;                    b6 = (b6 - 0.1333);&amp;#10;                    p1 = (1 - b6);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                dizi = [5, 6];&amp;#10;                util.shuffle(dizi);&amp;#10;                if ((dizi[0] === 5)) {&amp;#10;                    A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image5_2.size = [0.053, 0.093];&amp;#10;                    A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    A_image6_2.size = [0, 0];&amp;#10;                    A_Poli6.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 6)) {&amp;#10;                        A_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image6_2.size = [0.053, 0.093];&amp;#10;                        A_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        A_image5_2.size = [0, 0];&amp;#10;                        A_Poli5.size = [0.053, 0.093];&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="A_image1_2.size = (0, 0)&amp;#10;A_image2_2.size = (0, 0)&amp;#10;A_image3_2.size = (0, 0)&amp;#10;A_image4_2.size = (0, 0)&amp;#10;A_image5_2.size = (0, 0)&amp;#10;A_image6_2.size = (0, 0)&amp;#10;A_Poli1.size = (0, 0)&amp;#10;A_Poli2.size = (0, 0)&amp;#10;A_Poli3.size = (0, 0)&amp;#10;A_Poli4.size = (0, 0)&amp;#10;A_Poli5.size = (0, 0)&amp;#10;A_Poli6.size = (0, 0)&amp;#10;&amp;#10;if A_kosul.text == &quot;LL&quot;:&amp;#10;    if A_cevap.text == &quot;ö&quot;:&amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0.053, 0.093)&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0, 0)&amp;#10;            A_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0.053, 0.093)&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0, 0)&amp;#10;            A_Poli5.size = (0.053, 0.093)&amp;#10;    &amp;#10;    if A_cevap.text == &quot;ç&quot;:&amp;#10;        r5 = float(round(r5,4)) + 0.5333&amp;#10;        g5 = float(round(g5,4)) + 0.5333&amp;#10;        b5 = float(round(b5,4)) + 0.5333&amp;#10;        &amp;#10;        r6 = float(round(r6,4)) + 0.5333&amp;#10;        g6 = float(round(g6,4)) + 0.5333&amp;#10;        b6 = float(round(b6,4)) + 0.5333&amp;#10;        &amp;#10;        if r5 &gt; 1:&amp;#10;            r5 = r5 - 0.5333&amp;#10;            p1 = 1 - r5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g5 &gt; 1:&amp;#10;            g5 = g5 - 0.5333&amp;#10;            p1 = 1 - g5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b5 &gt; 1:&amp;#10;            b5 = b5 - 0.5333&amp;#10;            p1 = 1 - b5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r6 &gt; 1:&amp;#10;            r6 = r6 - 0.5333&amp;#10;            p1 = 1 - r6&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g6 &gt; 1:&amp;#10;            g6 = g6 - 0.5333&amp;#10;            p1 = 1 - g6&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b6 &gt; 1:&amp;#10;            b6 = b6 - 0.5333&amp;#10;            p1 = 1 - b6&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b6 = -float(round(p4,4))&amp;#10;        &amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0.053, 0.093)&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0, 0)&amp;#10;            A_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0.053, 0.093)&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0, 0)&amp;#10;            A_Poli5.size = (0.053, 0.093)&amp;#10;            &amp;#10;&amp;#10;elif A_kosul.text == &quot;HL&quot;: &amp;#10;    if A_cevap.text == &quot;ö&quot;:&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            A_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0.053, 0.093)&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0, 0)&amp;#10;            A_Poli2.size = (0.053, 0.093)&amp;#10;            A_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0, 0)&amp;#10;            A_Poli3.size = (0.053, 0.093)&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0, 0)&amp;#10;            A_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 2:&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0.053, 0.093)&amp;#10;            A_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0, 0)&amp;#10;            A_Poli1.size = (0.053, 0.093)&amp;#10;            A_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0, 0)&amp;#10;            A_Poli3.size = (0.053, 0.093)&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0, 0)&amp;#10;            A_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 3:&amp;#10;            A_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0.053, 0.093)&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0, 0)&amp;#10;            A_Poli4.size = (0.053, 0.093)&amp;#10;            A_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0, 0)&amp;#10;            A_Poli1.size = (0.053, 0.093)&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0, 0)&amp;#10;            A_Poli2.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 4:&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0.053, 0.093)&amp;#10;            A_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0, 0)&amp;#10;            A_Poli3.size = (0.053, 0.093)&amp;#10;            A_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0, 0)&amp;#10;            A_Poli1.size = (0.053, 0.093)&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0, 0)&amp;#10;            A_Poli2.size = (0.053, 0.093)&amp;#10;    &amp;#10;    if A_cevap.text == &quot;ç&quot;:&amp;#10;        r1 = float(round(r1,4)) + 0.5333&amp;#10;        g1 = float(round(g1,4)) + 0.5333&amp;#10;        b1 = float(round(b1,4)) + 0.5333&amp;#10;        &amp;#10;        r2 = float(round(r2,4)) + 0.5333&amp;#10;        g2 = float(round(g2,4)) + 0.5333&amp;#10;        b2 = float(round(b2,4)) + 0.5333&amp;#10;        &amp;#10;        r3 = float(round(r3,4)) + 0.5333&amp;#10;        g3 = float(round(g3,4)) + 0.5333&amp;#10;        b3 = float(round(b3,4)) + 0.5333&amp;#10;        &amp;#10;        r4 = float(round(r4,4)) + 0.5333&amp;#10;        g4 = float(round(g4,4)) + 0.5333&amp;#10;        b4 = float(round(b4,4)) + 0.5333&amp;#10;        &amp;#10;        if r1 &gt; 1:&amp;#10;            r1 = r1 - 0.5333&amp;#10;            p1 = 1 - r1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g1 &gt; 1:&amp;#10;            g1 = g1 - 0.5333&amp;#10;            p1 = 1 - g1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b1 &gt; 1:&amp;#10;            b1 = b1 - 0.5333&amp;#10;            p1 = 1 - b1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r2 &gt; 1:&amp;#10;            r2 = r2 - 0.5333&amp;#10;            p1 = 1 - r2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g2 &gt; 1:&amp;#10;            g2 = g2 - 0.5333&amp;#10;            p1 = 1 - g2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b2 &gt; 1:&amp;#10;            b2 = b2 - 0.5333&amp;#10;            p1 = 1 - b2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r3 &gt; 1:&amp;#10;            r3 = r3 - 0.5333&amp;#10;            p1 = 1 - r3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g3 &gt; 1:&amp;#10;            g3 = g3 - 0.5333&amp;#10;            p1 = 1 - g3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b3 &gt; 1:&amp;#10;            b3 = b3 - 0.5333&amp;#10;            p1 = 1 - b3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r4 &gt; 1:&amp;#10;            r4 = r4 - 0.5333&amp;#10;            p1 = 1 - r4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g4 &gt; 1:&amp;#10;            g4 = g4 - 0.5333&amp;#10;            p1 = 1 - g4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b4 &gt; 1:&amp;#10;            b4 = b4 - 0.5333&amp;#10;            p1 = 1 - b4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b4 = -float(round(p4,4))&amp;#10;&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            A_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0.053, 0.093)&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0, 0)&amp;#10;            A_Poli2.size = (0.053, 0.093)&amp;#10;            A_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0, 0)&amp;#10;            A_Poli3.size = (0.053, 0.093)&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0, 0)&amp;#10;            A_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 2:&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0.053, 0.093)&amp;#10;            A_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0, 0)&amp;#10;            A_Poli1.size = (0.053, 0.093)&amp;#10;            A_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0, 0)&amp;#10;            A_Poli3.size = (0.053, 0.093)&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0, 0)&amp;#10;            A_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 3:&amp;#10;            A_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0.053, 0.093)&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0, 0)&amp;#10;            A_Poli4.size = (0.053, 0.093)&amp;#10;            A_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0, 0)&amp;#10;            A_Poli1.size = (0.053, 0.093)&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0, 0)&amp;#10;            A_Poli2.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 4:&amp;#10;            A_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            A_image4_2.size = (0.053, 0.093)&amp;#10;            A_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            A_image3_2.size = (0, 0)&amp;#10;            A_Poli3.size = (0.053, 0.093)&amp;#10;            A_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            A_image1_2.size = (0, 0)&amp;#10;            A_Poli1.size = (0.053, 0.093)&amp;#10;            A_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            A_image2_2.size = (0, 0)&amp;#10;            A_Poli2.size = (0.053, 0.093)&amp;#10;&amp;#10;elif A_kosul.text == &quot;LS&quot;: &amp;#10;    if A_cevap.text == &quot;ö&quot;:&amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0.053, 0.093)&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0, 0)&amp;#10;            A_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0.053, 0.093)&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0, 0)&amp;#10;            A_Poli5.size = (0.053, 0.093)&amp;#10;&amp;#10;    if A_cevap.text == &quot;ç&quot;:&amp;#10;        r5 = float(round(r5,4)) + 0.1333&amp;#10;        g5 = float(round(g5,4)) + 0.1333&amp;#10;        b5 = float(round(b5,4)) + 0.1333&amp;#10;        &amp;#10;        r6 = float(round(r6,4)) + 0.1333&amp;#10;        g6 = float(round(g6,4)) + 0.1333&amp;#10;        b6 = float(round(b6,4)) + 0.1333&amp;#10;        &amp;#10;        if r5 &gt; 1:&amp;#10;            r5 = r5 - 0.1333&amp;#10;            p1 = 1 - r5&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g5 &gt; 1:&amp;#10;            g5 = g5 - 0.1333&amp;#10;            p1 = 1 - g5&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b5 &gt; 1:&amp;#10;            b5 = b5 - 0.1333&amp;#10;            p1 = 1 - b5&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r6 &gt; 1:&amp;#10;            r6 = r6 - 0.1333&amp;#10;            p1 = 1 - r6&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g6 &gt; 1:&amp;#10;            g6 = g6 - 0.1333&amp;#10;            p1 = 1 - g6&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b6 &gt; 1:&amp;#10;            b6 = b6 - 0.1333&amp;#10;            p1 = 1 - b6&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b6 = -float(round(p4,4))&amp;#10;&amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0.053, 0.093)&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0, 0)&amp;#10;            A_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            A_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            A_image6_2.size = (0.053, 0.093)&amp;#10;            A_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            A_image5_2.size = (0, 0)&amp;#10;            A_Poli5.size = (0.053, 0.093)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((A_Key_2.corr === 0)) {&amp;#10;    A_Sound_2.play();&amp;#10;}&amp;#10;if ((counter === 16)) {&amp;#10;    LoopAlistirma.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if A_Key_2.corr == 0:&amp;#10;    A_Sound_2.play()&amp;#10;    &amp;#10;if counter == 16:&amp;#10;    LoopAlistirma.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="A_Code_VWM" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="D_Fixation800ms">
      <ImageComponent name="D_image800" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image800" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="D_kosul" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="D_kosul" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$condition" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="D_cevap" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.00" valType="num" updates="constant" name="letterHeight"/>
        <Param val="D_cevap" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="48" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$taskcevap" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="D_code800" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="r1 = 0&amp;#10;g1 = 0&amp;#10;b1 = 0&amp;#10;r2 = 0&amp;#10;g2 = 0&amp;#10;b2 = 0&amp;#10;r3 = 0&amp;#10;g3 = 0&amp;#10;b3 = 0&amp;#10;r4 = 0&amp;#10;g4 = 0&amp;#10;b4 = 0&amp;#10;r5 = 0&amp;#10;g5 = 0&amp;#10;b5 = 0&amp;#10;r6 = 0&amp;#10;g6 = 0&amp;#10;b6 = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="r1 = 0;&amp;#10;g1 = 0;&amp;#10;b1 = 0;&amp;#10;r2 = 0;&amp;#10;g2 = 0;&amp;#10;b2 = 0;&amp;#10;r3 = 0;&amp;#10;g3 = 0;&amp;#10;b3 = 0;&amp;#10;r4 = 0;&amp;#10;g4 = 0;&amp;#10;b4 = 0;&amp;#10;r5 = 0;&amp;#10;g5 = 0;&amp;#10;b5 = 0;&amp;#10;r6 = 0;&amp;#10;g6 = 0;&amp;#10;b6 = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="r1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b1 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b2 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b3 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b4 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b5 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;r6 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;g6 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;b6 = Number.parseFloat(util.round(Math.random(), 4));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="r1 = float(round(random(),4))&amp;#10;g1 = float(round(random(),4))&amp;#10;b1 = float(round(random(),4))&amp;#10;&amp;#10;r2 = float(round(random(),4))&amp;#10;g2 = float(round(random(),4))&amp;#10;b2 = float(round(random(),4))&amp;#10;&amp;#10;r3 = float(round(random(),4))&amp;#10;g3 = float(round(random(),4))&amp;#10;b3 = float(round(random(),4))&amp;#10;&amp;#10;r4 = float(round(random(),4))&amp;#10;g4 = float(round(random(),4))&amp;#10;b4 = float(round(random(),4))&amp;#10;&amp;#10;r5 = float(round(random(),4))&amp;#10;g5 = float(round(random(),4))&amp;#10;b5 = float(round(random(),4))&amp;#10;&amp;#10;r6 = float(round(random(),4))&amp;#10;g6 = float(round(random(),4))&amp;#10;b6 = float(round(random(),4))" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="D_code800" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="D_VWMLoad200ms">
      <ImageComponent name="D_Background1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_Background1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, 2.0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r6,g6,b6]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="D_code200" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((D_kosul.text === &quot;LL&quot;)) {&amp;#10;    D_image5.size = [0.053, 0.093];&amp;#10;    D_image6.size = [0.053, 0.093];&amp;#10;} else {&amp;#10;    if ((D_kosul.text === &quot;HL&quot;)) {&amp;#10;        D_image1.size = [0.053, 0.093];&amp;#10;        D_image2.size = [0.053, 0.093];&amp;#10;        D_image3.size = [0.053, 0.093];&amp;#10;        D_image4.size = [0.053, 0.093];&amp;#10;    } else {&amp;#10;        if ((D_kosul.text === &quot;LS&quot;)) {&amp;#10;            D_image5.size = [0.053, 0.093];&amp;#10;            D_image6.size = [0.053, 0.093];&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if D_kosul.text == &quot;LL&quot;: #LOW LOAD LARGE COLOR CHANGE&amp;#10;    D_image5.size = (0.053, 0.093)&amp;#10;    D_image6.size = (0.053, 0.093)&amp;#10;elif D_kosul.text == &quot;HL&quot;: #HİGH LOAD LARGE COLOR CHANGE&amp;#10;    D_image1.size = (0.053, 0.093)&amp;#10;    D_image2.size = (0.053, 0.093)&amp;#10;    D_image3.size = (0.053, 0.093)&amp;#10;    D_image4.size = (0.053, 0.093)&amp;#10;elif D_kosul.text == &quot;LS&quot;: # LOW LOAD SMALL COLOR CHANGE&amp;#10;    D_image5.size = (0.053, 0.093)&amp;#10;    D_image6.size = (0.053, 0.093)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="D_code200" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="D_BlankScreen2000ms">
      <ImageComponent name="D_image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="D_code2000" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="D_code2000" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="D_Flanker2000ms">
      <ImageComponent name="D_Background2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_Background2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, 2.0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="D_Hedef" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.130" valType="num" updates="constant" name="letterHeight"/>
        <Param val="D_Hedef" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonhedef" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$hedef" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="D_Celdirici" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.186" valType="num" updates="constant" name="letterHeight"/>
        <Param val="D_Celdirici" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pozisyonceldirici" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$celdirici" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="D_Key" plugin="None">
        <Param val="'x','z','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$flankercevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="D_Key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="120" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="D_Sound" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="D_Sound" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="D_code2000_flanker" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="FRate = (1000 / Number.parseInt(util.round(psychoJS.window.getActualFrameRate(), 2)));&amp;#10;FrameN = Number.parseInt((2000 / FRate));&amp;#10;frame = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="FRate = 1000 / int(round(win.getActualFrameRate(),2))&amp;#10;FrameN = int(2000 / FRate)&amp;#10;frame = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="frame = frame + 1&amp;#10;requirement = 2000 / FRate&amp;#10;if frame &gt;= requirement:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="frame = (frame + 1);&amp;#10;requirement = (2000 / FRate);&amp;#10;if ((frame &gt;= requirement)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((D_Key.keys === null)) {&amp;#10;    D_Sound.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if D_Key.keys == None:&amp;#10;    D_Sound.play()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="D_code2000_flanker" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="D_FlankerFixation500ms">
      <ImageComponent name="D_500" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_500" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="D_500_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="D_500_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="D_VWMLoadTask">
      <ImageComponent name="D_Background1_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="fixation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_Background1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2.0, 2.0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image1_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r1,g1,b1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image2_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r2,g2,b2]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image3_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r3,g3,b3]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image3_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image4_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r4,g4,b4]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image4_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image5_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r5,g5,b5]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image5_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="D_image6_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[r6,g6,b6]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="white.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="D_image6_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <PolygonComponent name="D_Poli1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="D_Poli1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="D_Poli2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="D_Poli2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="D_Poli3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="D_Poli3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.118, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="D_Poli4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="D_Poli4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.176, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="D_Poli5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="D_Poli5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="D_Poli6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="D_Poli6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.147, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="D_Key_2" plugin="None">
        <Param val="'ö','ç'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$taskcevap" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="D_Key_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="frame N" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SoundComponent name="D_Sound_2" plugin="None">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="D_Sound_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="yanlis.wav" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <CodeComponent name="D_Code_VWM" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="D_image1_2.size = [0, 0];&amp;#10;D_image2_2.size = [0, 0];&amp;#10;D_image3_2.size = [0, 0];&amp;#10;D_image4_2.size = [0, 0];&amp;#10;D_image5_2.size = [0, 0];&amp;#10;D_image6_2.size = [0, 0];&amp;#10;D_Poli1.size = [0, 0];&amp;#10;D_Poli2.size = [0, 0];&amp;#10;D_Poli3.size = [0, 0];&amp;#10;D_Poli4.size = [0, 0];&amp;#10;D_Poli5.size = [0, 0];&amp;#10;D_Poli6.size = [0, 0];&amp;#10;if ((D_kosul.text === &quot;LL&quot;)) {&amp;#10;    if ((D_cevap.text === &quot;\u00f6&quot;)) {&amp;#10;        dizi = [5, 6];&amp;#10;        util.shuffle(dizi);&amp;#10;        if ((dizi[0] === 5)) {&amp;#10;            D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            D_image5_2.size = [0.053, 0.093];&amp;#10;            D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            D_image6_2.size = [0, 0];&amp;#10;            D_Poli6.size = [0.053, 0.093];&amp;#10;        } else {&amp;#10;            if ((dizi[0] === 6)) {&amp;#10;                D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image6_2.size = [0.053, 0.093];&amp;#10;                D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image5_2.size = [0, 0];&amp;#10;                D_Poli5.size = [0.053, 0.093];&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    if ((D_cevap.text === &quot;\u00e7&quot;)) {&amp;#10;        r5 = (Number.parseFloat(util.round(r5, 4)) + 0.5333);&amp;#10;        g5 = (Number.parseFloat(util.round(g5, 4)) + 0.5333);&amp;#10;        b5 = (Number.parseFloat(util.round(b5, 4)) + 0.5333);&amp;#10;        r6 = (Number.parseFloat(util.round(r6, 4)) + 0.5333);&amp;#10;        g6 = (Number.parseFloat(util.round(g6, 4)) + 0.5333);&amp;#10;        b6 = (Number.parseFloat(util.round(b6, 4)) + 0.5333);&amp;#10;        if ((r5 &gt; 1)) {&amp;#10;            r5 = (r5 - 0.5333);&amp;#10;            p1 = (1 - r5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            r5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((g5 &gt; 1)) {&amp;#10;            g5 = (g5 - 0.5333);&amp;#10;            p1 = (1 - g5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            g5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((b5 &gt; 1)) {&amp;#10;            b5 = (b5 - 0.5333);&amp;#10;            p1 = (1 - b5);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            b5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((r6 &gt; 1)) {&amp;#10;            r6 = (r6 - 0.5333);&amp;#10;            p1 = (1 - r6);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            r6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((g6 &gt; 1)) {&amp;#10;            g6 = (g6 - 0.5333);&amp;#10;            p1 = (1 - g6);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            g6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        if ((b6 &gt; 1)) {&amp;#10;            b6 = (b6 - 0.5333);&amp;#10;            p1 = (1 - b6);&amp;#10;            p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;            p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;            p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;            b6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;        }&amp;#10;        dizi = [5, 6];&amp;#10;        util.shuffle(dizi);&amp;#10;        if ((dizi[0] === 5)) {&amp;#10;            D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            D_image5_2.size = [0.053, 0.093];&amp;#10;            D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            D_image6_2.size = [0, 0];&amp;#10;            D_Poli6.size = [0.053, 0.093];&amp;#10;        } else {&amp;#10;            if ((dizi[0] === 6)) {&amp;#10;                D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image6_2.size = [0.053, 0.093];&amp;#10;                D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image5_2.size = [0, 0];&amp;#10;                D_Poli5.size = [0.053, 0.093];&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((D_kosul.text === &quot;HL&quot;)) {&amp;#10;        if ((D_cevap.text === &quot;\u00f6&quot;)) {&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                D_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image1_2.size = [0.053, 0.093];&amp;#10;                D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image2_2.size = [0, 0];&amp;#10;                D_Poli2.size = [0.053, 0.093];&amp;#10;                D_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image3_2.size = [0, 0];&amp;#10;                D_Poli3.size = [0.053, 0.093];&amp;#10;                D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image4_2.size = [0, 0];&amp;#10;                D_Poli4.size = [0.053, 0.093];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image2_2.size = [0.053, 0.093];&amp;#10;                    D_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image1_2.size = [0, 0];&amp;#10;                    D_Poli1.size = [0.053, 0.093];&amp;#10;                    D_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image3_2.size = [0, 0];&amp;#10;                    D_Poli3.size = [0.053, 0.093];&amp;#10;                    D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image4_2.size = [0, 0];&amp;#10;                    D_Poli4.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        D_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image3_2.size = [0.053, 0.093];&amp;#10;                        D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image4_2.size = [0, 0];&amp;#10;                        D_Poli4.size = [0.053, 0.093];&amp;#10;                        D_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image1_2.size = [0, 0];&amp;#10;                        D_Poli1.size = [0.053, 0.093];&amp;#10;                        D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image2_2.size = [0, 0];&amp;#10;                        D_Poli2.size = [0.053, 0.093];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image4_2.size = [0.053, 0.093];&amp;#10;                            D_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image3_2.size = [0, 0];&amp;#10;                            D_Poli3.size = [0.053, 0.093];&amp;#10;                            D_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image1_2.size = [0, 0];&amp;#10;                            D_Poli1.size = [0.053, 0.093];&amp;#10;                            D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image2_2.size = [0, 0];&amp;#10;                            D_Poli2.size = [0.053, 0.093];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;        if ((D_cevap.text === &quot;\u00e7&quot;)) {&amp;#10;            r1 = (Number.parseFloat(util.round(r1, 4)) + 0.5333);&amp;#10;            g1 = (Number.parseFloat(util.round(g1, 4)) + 0.5333);&amp;#10;            b1 = (Number.parseFloat(util.round(b1, 4)) + 0.5333);&amp;#10;            r2 = (Number.parseFloat(util.round(r2, 4)) + 0.5333);&amp;#10;            g2 = (Number.parseFloat(util.round(g2, 4)) + 0.5333);&amp;#10;            b2 = (Number.parseFloat(util.round(b2, 4)) + 0.5333);&amp;#10;            r3 = (Number.parseFloat(util.round(r3, 4)) + 0.5333);&amp;#10;            g3 = (Number.parseFloat(util.round(g3, 4)) + 0.5333);&amp;#10;            b3 = (Number.parseFloat(util.round(b3, 4)) + 0.5333);&amp;#10;            r4 = (Number.parseFloat(util.round(r4, 4)) + 0.5333);&amp;#10;            g4 = (Number.parseFloat(util.round(g4, 4)) + 0.5333);&amp;#10;            b4 = (Number.parseFloat(util.round(b4, 4)) + 0.5333);&amp;#10;            if ((r1 &gt; 1)) {&amp;#10;                r1 = (r1 - 0.5333);&amp;#10;                p1 = (1 - r1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g1 &gt; 1)) {&amp;#10;                g1 = (g1 - 0.5333);&amp;#10;                p1 = (1 - g1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b1 &gt; 1)) {&amp;#10;                b1 = (b1 - 0.5333);&amp;#10;                p1 = (1 - b1);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b1 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r2 &gt; 1)) {&amp;#10;                r2 = (r2 - 0.5333);&amp;#10;                p1 = (1 - r2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g2 &gt; 1)) {&amp;#10;                g2 = (g2 - 0.5333);&amp;#10;                p1 = (1 - g2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b2 &gt; 1)) {&amp;#10;                b2 = (b2 - 0.5333);&amp;#10;                p1 = (1 - b2);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b2 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r3 &gt; 1)) {&amp;#10;                r3 = (r3 - 0.5333);&amp;#10;                p1 = (1 - r3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g3 &gt; 1)) {&amp;#10;                g3 = (g3 - 0.5333);&amp;#10;                p1 = (1 - g3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b3 &gt; 1)) {&amp;#10;                b3 = (b3 - 0.5333);&amp;#10;                p1 = (1 - b3);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b3 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((r4 &gt; 1)) {&amp;#10;                r4 = (r4 - 0.5333);&amp;#10;                p1 = (1 - r4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                r4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((g4 &gt; 1)) {&amp;#10;                g4 = (g4 - 0.5333);&amp;#10;                p1 = (1 - g4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                g4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            if ((b4 &gt; 1)) {&amp;#10;                b4 = (b4 - 0.5333);&amp;#10;                p1 = (1 - b4);&amp;#10;                p2 = (0.5333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                b4 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;            }&amp;#10;            dizi = [1, 2, 3, 4];&amp;#10;            util.shuffle(dizi);&amp;#10;            if ((dizi[0] === 1)) {&amp;#10;                D_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image1_2.size = [0.053, 0.093];&amp;#10;                D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image2_2.size = [0, 0];&amp;#10;                D_Poli2.size = [0.053, 0.093];&amp;#10;                D_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image3_2.size = [0, 0];&amp;#10;                D_Poli3.size = [0.053, 0.093];&amp;#10;                D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                D_image4_2.size = [0, 0];&amp;#10;                D_Poli4.size = [0.053, 0.093];&amp;#10;            } else {&amp;#10;                if ((dizi[0] === 2)) {&amp;#10;                    D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image2_2.size = [0.053, 0.093];&amp;#10;                    D_image1_2.setColor([r1, g1, b1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image1_2.size = [0, 0];&amp;#10;                    D_Poli1.size = [0.053, 0.093];&amp;#10;                    D_image3_2.setColor([r3, g3, g3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image3_2.size = [0, 0];&amp;#10;                    D_Poli3.size = [0.053, 0.093];&amp;#10;                    D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image4_2.size = [0, 0];&amp;#10;                    D_Poli4.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 3)) {&amp;#10;                        D_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image3_2.size = [0.053, 0.093];&amp;#10;                        D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image4_2.size = [0, 0];&amp;#10;                        D_Poli4.size = [0.053, 0.093];&amp;#10;                        D_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image1_2.size = [0, 0];&amp;#10;                        D_Poli1.size = [0.053, 0.093];&amp;#10;                        D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image2_2.size = [0, 0];&amp;#10;                        D_Poli2.size = [0.053, 0.093];&amp;#10;                    } else {&amp;#10;                        if ((dizi[0] === 4)) {&amp;#10;                            D_image4_2.setColor([r4, g4, g4], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image4_2.size = [0.053, 0.093];&amp;#10;                            D_image3_2.setColor([r3, g3, b3], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image3_2.size = [0, 0];&amp;#10;                            D_Poli3.size = [0.053, 0.093];&amp;#10;                            D_image1_2.setColor([r1, g1, g1], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image1_2.size = [0, 0];&amp;#10;                            D_Poli1.size = [0.053, 0.093];&amp;#10;                            D_image2_2.setColor([r2, g2, g2], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                            D_image2_2.size = [0, 0];&amp;#10;                            D_Poli2.size = [0.053, 0.093];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((D_kosul.text === &quot;LS&quot;)) {&amp;#10;            if ((D_cevap.text === &quot;\u00f6&quot;)) {&amp;#10;                dizi = [5, 6];&amp;#10;                util.shuffle(dizi);&amp;#10;                if ((dizi[0] === 5)) {&amp;#10;                    D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image5_2.size = [0.053, 0.093];&amp;#10;                    D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image6_2.size = [0, 0];&amp;#10;                    D_Poli6.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 6)) {&amp;#10;                        D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image6_2.size = [0.053, 0.093];&amp;#10;                        D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image5_2.size = [0, 0];&amp;#10;                        D_Poli5.size = [0.053, 0.093];&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            if ((D_cevap.text === &quot;\u00e7&quot;)) {&amp;#10;                r5 = (Number.parseFloat(util.round(r5, 4)) + 0.1333);&amp;#10;                g5 = (Number.parseFloat(util.round(g5, 4)) + 0.1333);&amp;#10;                b5 = (Number.parseFloat(util.round(b5, 4)) + 0.1333);&amp;#10;                r6 = (Number.parseFloat(util.round(r6, 4)) + 0.1333);&amp;#10;                g6 = (Number.parseFloat(util.round(g6, 4)) + 0.1333);&amp;#10;                b6 = (Number.parseFloat(util.round(b6, 4)) + 0.1333);&amp;#10;                if ((r5 &gt; 1)) {&amp;#10;                    r5 = (r5 - 0.1333);&amp;#10;                    p1 = (1 - r5);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g5 &gt; 1)) {&amp;#10;                    g5 = (g5 - 0.1333);&amp;#10;                    p1 = (1 - g5);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b5 &gt; 1)) {&amp;#10;                    b5 = (b5 - 0.1333);&amp;#10;                    p1 = (1 - b5);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b5 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((r6 &gt; 1)) {&amp;#10;                    r6 = (r6 - 0.1333);&amp;#10;                    p1 = (1 - r6);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    r6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((g6 &gt; 1)) {&amp;#10;                    g6 = (g6 - 0.1333);&amp;#10;                    p1 = (1 - g6);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    g6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                if ((b6 &gt; 1)) {&amp;#10;                    b6 = (b6 - 0.1333);&amp;#10;                    p1 = (1 - b6);&amp;#10;                    p2 = (0.1333 - Number.parseFloat(util.round(p1, 4)));&amp;#10;                    p3 = Math.abs((Number.parseFloat(util.round(p2, 4)) - Number.parseFloat(util.round(p1, 4))));&amp;#10;                    p4 = (1 - Number.parseFloat(util.round(p3, 4)));&amp;#10;                    b6 = (- Number.parseFloat(util.round(p4, 4)));&amp;#10;                }&amp;#10;                dizi = [5, 6];&amp;#10;                util.shuffle(dizi);&amp;#10;                if ((dizi[0] === 5)) {&amp;#10;                    D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image5_2.size = [0.053, 0.093];&amp;#10;                    D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                    D_image6_2.size = [0, 0];&amp;#10;                    D_Poli6.size = [0.053, 0.093];&amp;#10;                } else {&amp;#10;                    if ((dizi[0] === 6)) {&amp;#10;                        D_image6_2.setColor([r6, g6, g6], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image6_2.size = [0.053, 0.093];&amp;#10;                        D_image5_2.setColor([r5, g5, b5], {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;                        D_image5_2.size = [0, 0];&amp;#10;                        D_Poli5.size = [0.053, 0.093];&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="D_image1_2.size = (0, 0)&amp;#10;D_image2_2.size = (0, 0)&amp;#10;D_image3_2.size = (0, 0)&amp;#10;D_image4_2.size = (0, 0)&amp;#10;D_image5_2.size = (0, 0)&amp;#10;D_image6_2.size = (0, 0)&amp;#10;D_Poli1.size = (0, 0)&amp;#10;D_Poli2.size = (0, 0)&amp;#10;D_Poli3.size = (0, 0)&amp;#10;D_Poli4.size = (0, 0)&amp;#10;D_Poli5.size = (0, 0)&amp;#10;D_Poli6.size = (0, 0)&amp;#10;&amp;#10;if D_kosul.text == &quot;LL&quot;:&amp;#10;    if D_cevap.text == &quot;ö&quot;:&amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0.053, 0.093)&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0, 0)&amp;#10;            D_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0.053, 0.093)&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0, 0)&amp;#10;            D_Poli5.size = (0.053, 0.093)&amp;#10;    &amp;#10;    if D_cevap.text == &quot;ç&quot;:&amp;#10;        r5 = float(round(r5,4)) + 0.5333&amp;#10;        g5 = float(round(g5,4)) + 0.5333&amp;#10;        b5 = float(round(b5,4)) + 0.5333&amp;#10;        &amp;#10;        r6 = float(round(r6,4)) + 0.5333&amp;#10;        g6 = float(round(g6,4)) + 0.5333&amp;#10;        b6 = float(round(b6,4)) + 0.5333&amp;#10;        &amp;#10;        if r5 &gt; 1:&amp;#10;            r5 = r5 - 0.5333&amp;#10;            p1 = 1 - r5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g5 &gt; 1:&amp;#10;            g5 = g5 - 0.5333&amp;#10;            p1 = 1 - g5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b5 &gt; 1:&amp;#10;            b5 = b5 - 0.5333&amp;#10;            p1 = 1 - b5&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r6 &gt; 1:&amp;#10;            r6 = r6 - 0.5333&amp;#10;            p1 = 1 - r6&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g6 &gt; 1:&amp;#10;            g6 = g6 - 0.5333&amp;#10;            p1 = 1 - g6&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b6 &gt; 1:&amp;#10;            b6 = b6 - 0.5333&amp;#10;            p1 = 1 - b6&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b6 = -float(round(p4,4))&amp;#10;        &amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0.053, 0.093)&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0, 0)&amp;#10;            D_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0.053, 0.093)&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0, 0)&amp;#10;            D_Poli5.size = (0.053, 0.093)&amp;#10;            &amp;#10;&amp;#10;elif D_kosul.text == &quot;HL&quot;: &amp;#10;    if D_cevap.text == &quot;ö&quot;:&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            D_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0.053, 0.093)&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0, 0)&amp;#10;            D_Poli2.size = (0.053, 0.093)&amp;#10;            D_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0, 0)&amp;#10;            D_Poli3.size = (0.053, 0.093)&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0, 0)&amp;#10;            D_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 2:&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0.053, 0.093)&amp;#10;            D_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0, 0)&amp;#10;            D_Poli1.size = (0.053, 0.093)&amp;#10;            D_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0, 0)&amp;#10;            D_Poli3.size = (0.053, 0.093)&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0, 0)&amp;#10;            D_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 3:&amp;#10;            D_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0.053, 0.093)&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0, 0)&amp;#10;            D_Poli4.size = (0.053, 0.093)&amp;#10;            D_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0, 0)&amp;#10;            D_Poli1.size = (0.053, 0.093)&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0, 0)&amp;#10;            D_Poli2.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 4:&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0.053, 0.093)&amp;#10;            D_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0, 0)&amp;#10;            D_Poli3.size = (0.053, 0.093)&amp;#10;            D_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0, 0)&amp;#10;            D_Poli1.size = (0.053, 0.093)&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0, 0)&amp;#10;            D_Poli2.size = (0.053, 0.093)&amp;#10;    &amp;#10;    if D_cevap.text == &quot;ç&quot;:&amp;#10;        r1 = float(round(r1,4)) + 0.5333&amp;#10;        g1 = float(round(g1,4)) + 0.5333&amp;#10;        b1 = float(round(b1,4)) + 0.5333&amp;#10;        &amp;#10;        r2 = float(round(r2,4)) + 0.5333&amp;#10;        g2 = float(round(g2,4)) + 0.5333&amp;#10;        b2 = float(round(b2,4)) + 0.5333&amp;#10;        &amp;#10;        r3 = float(round(r3,4)) + 0.5333&amp;#10;        g3 = float(round(g3,4)) + 0.5333&amp;#10;        b3 = float(round(b3,4)) + 0.5333&amp;#10;        &amp;#10;        r4 = float(round(r4,4)) + 0.5333&amp;#10;        g4 = float(round(g4,4)) + 0.5333&amp;#10;        b4 = float(round(b4,4)) + 0.5333&amp;#10;        &amp;#10;        if r1 &gt; 1:&amp;#10;            r1 = r1 - 0.5333&amp;#10;            p1 = 1 - r1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g1 &gt; 1:&amp;#10;            g1 = g1 - 0.5333&amp;#10;            p1 = 1 - g1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b1 &gt; 1:&amp;#10;            b1 = b1 - 0.5333&amp;#10;            p1 = 1 - b1&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b1 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r2 &gt; 1:&amp;#10;            r2 = r2 - 0.5333&amp;#10;            p1 = 1 - r2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g2 &gt; 1:&amp;#10;            g2 = g2 - 0.5333&amp;#10;            p1 = 1 - g2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b2 &gt; 1:&amp;#10;            b2 = b2 - 0.5333&amp;#10;            p1 = 1 - b2&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b2 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r3 &gt; 1:&amp;#10;            r3 = r3 - 0.5333&amp;#10;            p1 = 1 - r3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g3 &gt; 1:&amp;#10;            g3 = g3 - 0.5333&amp;#10;            p1 = 1 - g3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b3 &gt; 1:&amp;#10;            b3 = b3 - 0.5333&amp;#10;            p1 = 1 - b3&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b3 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r4 &gt; 1:&amp;#10;            r4 = r4 - 0.5333&amp;#10;            p1 = 1 - r4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g4 &gt; 1:&amp;#10;            g4 = g4 - 0.5333&amp;#10;            p1 = 1 - g4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g4 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b4 &gt; 1:&amp;#10;            b4 = b4 - 0.5333&amp;#10;            p1 = 1 - b4&amp;#10;            p2 = 0.5333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b4 = -float(round(p4,4))&amp;#10;&amp;#10;        dizi = [1,2,3,4]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 1:&amp;#10;            D_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0.053, 0.093)&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0, 0)&amp;#10;            D_Poli2.size = (0.053, 0.093)&amp;#10;            D_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0, 0)&amp;#10;            D_Poli3.size = (0.053, 0.093)&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0, 0)&amp;#10;            D_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 2:&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0.053, 0.093)&amp;#10;            D_image1_2.setColor([r1,g1,b1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0, 0)&amp;#10;            D_Poli1.size = (0.053, 0.093)&amp;#10;            D_image3_2.setColor([r3,g3,g3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0, 0)&amp;#10;            D_Poli3.size = (0.053, 0.093)&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0, 0)&amp;#10;            D_Poli4.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 3:&amp;#10;            D_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0.053, 0.093)&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0, 0)&amp;#10;            D_Poli4.size = (0.053, 0.093)&amp;#10;            D_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0, 0)&amp;#10;            D_Poli1.size = (0.053, 0.093)&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0, 0)&amp;#10;            D_Poli2.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 4:&amp;#10;            D_image4_2.setColor([r4,g4,g4], colorSpace='rgb')&amp;#10;            D_image4_2.size = (0.053, 0.093)&amp;#10;            D_image3_2.setColor([r3,g3,b3], colorSpace='rgb')&amp;#10;            D_image3_2.size = (0, 0)&amp;#10;            D_Poli3.size = (0.053, 0.093)&amp;#10;            D_image1_2.setColor([r1,g1,g1], colorSpace='rgb')&amp;#10;            D_image1_2.size = (0, 0)&amp;#10;            D_Poli1.size = (0.053, 0.093)&amp;#10;            D_image2_2.setColor([r2,g2,g2], colorSpace='rgb')&amp;#10;            D_image2_2.size = (0, 0)&amp;#10;            D_Poli2.size = (0.053, 0.093)&amp;#10;&amp;#10;elif D_kosul.text == &quot;LS&quot;: &amp;#10;    if D_cevap.text == &quot;ö&quot;:&amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0.053, 0.093)&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0, 0)&amp;#10;            D_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0.053, 0.093)&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0, 0)&amp;#10;            D_Poli5.size = (0.053, 0.093)&amp;#10;&amp;#10;    if D_cevap.text == &quot;ç&quot;:&amp;#10;        r5 = float(round(r5,4)) + 0.1333&amp;#10;        g5 = float(round(g5,4)) + 0.1333&amp;#10;        b5 = float(round(b5,4)) + 0.1333&amp;#10;        &amp;#10;        r6 = float(round(r6,4)) + 0.1333&amp;#10;        g6 = float(round(g6,4)) + 0.1333&amp;#10;        b6 = float(round(b6,4)) + 0.1333&amp;#10;        &amp;#10;        if r5 &gt; 1:&amp;#10;            r5 = r5 - 0.1333&amp;#10;            p1 = 1 - r5&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g5 &gt; 1:&amp;#10;            g5 = g5 - 0.1333&amp;#10;            p1 = 1 - g5&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b5 &gt; 1:&amp;#10;            b5 = b5 - 0.1333&amp;#10;            p1 = 1 - b5&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b5 = -float(round(p4,4))&amp;#10;            &amp;#10;        if r6 &gt; 1:&amp;#10;            r6 = r6 - 0.1333&amp;#10;            p1 = 1 - r6&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            r6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if g6 &gt; 1:&amp;#10;            g6 = g6 - 0.1333&amp;#10;            p1 = 1 - g6&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            g6 = -float(round(p4,4))&amp;#10;            &amp;#10;        if b6 &gt; 1:&amp;#10;            b6 = b6 - 0.1333&amp;#10;            p1 = 1 - b6&amp;#10;            p2 = 0.1333 - float(round(p1,4))&amp;#10;            p3 = abs(float(round(p2,4)) - float(round(p1,4)))&amp;#10;            p4 = 1 - float(round(p3,4))&amp;#10;            b6 = -float(round(p4,4))&amp;#10;&amp;#10;        dizi = [5,6]&amp;#10;        shuffle(dizi)&amp;#10;        if dizi[0] == 5:&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0.053, 0.093)&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0, 0)&amp;#10;            D_Poli6.size = (0.053, 0.093)&amp;#10;        elif dizi[0] == 6:&amp;#10;            D_image6_2.setColor([r6,g6,g6], colorSpace='rgb')&amp;#10;            D_image6_2.size = (0.053, 0.093)&amp;#10;            D_image5_2.setColor([r5,g5,b5], colorSpace='rgb')&amp;#10;            D_image5_2.size = (0, 0)&amp;#10;            D_Poli5.size = (0.053, 0.093)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((D_Key_2.corr === 0)) {&amp;#10;    D_Sound_2.play();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if D_Key_2.corr == 0:&amp;#10;    D_Sound_2.play()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="D_Code_VWM" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Yonerge"/>
    <LoopInitiator loopType="TrialHandler" name="LoopAlistirma">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="replication_of_zhang_and_luck.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="LoopAlistirma" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Fixation800ms"/>
    <Routine name="VWMLoad200ms"/>
    <Routine name="BlankScreen2000ms"/>
    <Routine name="Flanker2000ms"/>
    <Routine name="FlankerFixation500ms"/>
    <Routine name="VWMLoadTask"/>
    <LoopTerminator name="LoopAlistirma"/>
    <Routine name="DeneyGecis"/>
    <LoopInitiator loopType="TrialHandler" name="LoopDeney">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'HL'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'X', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'x', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ç', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'X', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.292, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'N', 'pozisyonceldirici': (0, 0.186), 'pozisyonhedef': (0.146, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}, {'hedef': 'Z', 'celdirici': 'Z', 'pozisyonceldirici': (0, -0.186), 'pozisyonhedef': (0.088, 0), 'flankercevap': 'z', 'taskcevap': 'ö', 'condition': 'LS'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="replication_of_zhang_and_luck.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="LoopDeney" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="D_Fixation800ms"/>
    <Routine name="D_VWMLoad200ms"/>
    <Routine name="D_BlankScreen2000ms"/>
    <Routine name="D_Flanker2000ms"/>
    <Routine name="D_FlankerFixation500ms"/>
    <Routine name="D_VWMLoadTask"/>
    <LoopTerminator name="LoopDeney"/>
  </Flow>
</PsychoPy2experiment>
